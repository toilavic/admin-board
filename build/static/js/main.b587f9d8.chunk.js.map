{"version":3,"sources":["components/auth/loginTheme.ts","components/auth/Login.tsx","components/auth/useForm.ts","api/APILogin.js","components/dashboard/appBarTheme.ts","components/dashboard/layout/Navbar.tsx","components/dashboard/layout/Sidebar.tsx","components/dashboard/grid/ActionGrid.ts","components/dashboard/grid/KeyGrid.tsx","api/APIUpdateKey.js","api/APIGetKeys.js","components/dashboard/actions/CreateKey.tsx","api/APICreateKey.js","components/dashboard/KeyTargets/ActionTarget.tsx","components/dashboard/KeyTargets/KeyTarget.tsx","api/APIUpdateTarget.js","api/APIGetTargets.js","components/dashboard/actions/CreateTarget.tsx","api/APICreateTarget.js","components/dashboard/AppContent.tsx","components/dashboard/Appbar.tsx","api/APIRefreshToken.js","components/dashboard/Dashboard.tsx","components/NotFound.tsx","components/Main.tsx","App.tsx","theme.tsx","index.tsx"],"names":["loginTheme","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","onLoginRedirect","history","callback","initialState","useState","values","setValues","onChange","event","target","name","value","onSubmit","a","preventDefault","useForm","userInfo","axios","post","constants","baseAddress","then","response","catch","error","data","status","message","alert","user","permissionLevel","localStorage","setItem","token","refreshToken","push","email","password","classes","getItem","to","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Button","color","drawerWidth","appBarTheme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Navbar","open","handleDrawerOpen","onLogOut","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","href","style","fontSize","Sidebar","handleDrawerClose","useTheme","Drawer","anchor","direction","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","onCellClicked","params","column","colId","dataset","action","api","startEditingCell","rowIndex","node","colKey","columnApi","getDisplayedCenterColumns","stopEditing","onRowEditingStarted","refreshCells","columns","rowNodes","force","onRowEditingStopped","onClickEdit","CellRenderer","prototype","createGui","tempDiv","document","createElement","innerHTML","this","eGui","firstElementChild","init","querySelector","eButton","buttonClickListener","onButtonClicked","bind","addEventListener","startEditingParams","getId","getGui","destroy","removeEventListener","initColumnDefs","headerName","field","sortable","filter","editable","cellRenderer","valueFormatter","Date","toLocaleDateString","minWidth","isCurrentRowEditing","getEditingCells","some","cell","defaultColDef","onRowValueChanged","console","log","swal","title","icon","buttons","dangerMode","willDelete","expire","keyRequiredInfo","config","method","headers","url","APIUpdateKey","expiresAt","res","err","KeyGrid","rowData","setRowData","useEffect","get","APIGetKeys","columnDefs","rowSelection","editType","suppressClickEdit","enableRangeSelection","CreateKey","props","owner","APICreateKey","results","window","location","reload","trigger","Tooltip","modal","close","htmlFor","placeholder","defaultValue","details","APIUpdateTarget","KeyTarget","APIGetTargets","CreateTarget","key","APICreateTarget","AppContent","getNewToken","Appbar","React","setOpen","removeItem","rToken","APIRefreshToken","interval","setInterval","clearInterval","Dashboard","NotFound","Main","path","exact","render","routeProps","App","createMuiTheme","red","A400","background","default","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.b587f9d8.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const loginTheme = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(img/chess.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));","import React, { useState } from 'react';\nimport { loginTheme } from './loginTheme'\nimport { Link, Redirect } from 'react-router-dom'\nimport { History, LocationState } from \"history\";\nimport UserType from './UserType'\nimport { Typography, Paper, Grid, TextField, CssBaseline, Button, Avatar } from '@material-ui/core';\nimport { useForm } from \"./useForm\";\nimport APILogin from '../../api/APILogin'\n\ninterface Props { \n    onLoginRedirect: string,\n    history: History<LocationState>\n}\n\nconst Login: React.FC<Props> = ({\n    onLoginRedirect,\n    history\n }) => {\n\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    // getting the event handlers from our custom hook\n    const { onChange, onSubmit, values } = useForm(\n        loginUserCallback,\n        initialState\n    );\n\n    function loginUserCallback() {\n        APILogin(values)\n            .then((data) => {\n                if (data.status === 401) {\n                    const message: string = data.data\n                    alert(message)\n                } else {\n                    const userInfo: UserType = data.data\n                    if (userInfo) {\n                        if (userInfo.user.permissionLevel === \"admin\") {\n                            localStorage.setItem(\"token\", userInfo.token)\n                            localStorage.setItem(\"refreshToken\", userInfo.refreshToken)\n                            history.push(onLoginRedirect)\n                        } else {\n                            alert('you are not admin')\n                        }\n                    }\n                }\n            })\n    }\n\n    const classes = loginTheme();\n    const isLogin = localStorage.getItem('token')\n    \n    if (!isLogin) {\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n    \n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                </Typography>\n    \n                        {/* form */}\n                        <form className={classes.form} noValidate onSubmit={onSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Username\"\n                                name=\"email\"\n                                onChange={onChange}\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                onChange={onChange}\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                  </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    } else return <><Redirect to=\"/dashboard\"/></>\n}\n\nexport default Login\n","import { useState } from \"react\";\n\n// useForm functional componen\nexport const useForm = (callback: any, initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };\n\n    // onSubmit\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await callback(); // triggering the callback\n    };\n\n    // return values\n    return {\n        onChange,\n        onSubmit,\n        values,\n    };\n\n}\n\n    ","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APILogin(userInfo) {\n    return axios.post(constants.baseAddress+'login', userInfo)\n  .then(response => response)\n  .catch(function (error) {\n    if (error.response) {\n      return error.response;\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    }\n  })\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 180;\n\nexport const appBarTheme = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      height: 55,\n      // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      height: 55,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport clsx from 'clsx';\nimport {Button, CssBaseline, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface Props {\n    open: boolean,\n    handleDrawerOpen: () => void;\n    onLogOut : () => void;\n}\n\nconst Navbar: React.FC<Props> = ({\n    open,\n    handleDrawerOpen,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n        <>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n                color=\"default\"\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                    </Typography>\n                    <Button href=\"/\" onClick={onLogOut} style={{ marginLeft: '80%', fontSize: 16 }} color=\"inherit\">\n                        Log-out</Button>\n            </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n\nexport default Navbar\n","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\ninterface Props {\n    open: boolean,\n    handleDrawerClose: () => void;\n}\nconst Sidebar: React.FC<Props> = ({ \n    open,\n    handleDrawerClose\n}) => {\n\n    const classes = appBarTheme();\n    const theme = useTheme();\n\n    return (\n        <>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton color=\"inherit\" onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n            </Drawer>\n        </>\n    );\n}\n\nexport default Sidebar;\n","import './style.css'\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        // if (action === \"delete\") {\n        //     console.log(params.data)\n        //     const { name } = params.data\n        //     swal({\n        //         title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n        //         text: \"Once deleted, you will not be able to recover this key!\",\n        //         icon: \"warning\",\n        //         // @ts-ignore\n        //         buttons: true,\n        //         dangerMode: true,\n        //     })\n        //         .then(willDelete => {\n        //             if (willDelete) {\n        //                 swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n        //                 params.api.applyTransaction({\n        //                     remove: [params.node.data]\n        //                 });\n        //             }\n        //         });\n        // }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n    Datepicker.prototype.init = function (params: any) {\n      this.eInput = document.createElement('input');\n      this.eInput.value = params.value;\n      this.eInput.classList.add('ag-input');\n      this.eInput.style.height = '100%';\n      $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n    };\n    Datepicker.prototype.getGui = function () {\n      return this.eInput;\n    };\n    Datepicker.prototype.afterGuiAttached = function () {\n      this.eInput.focus();\n      this.eInput.select();\n    };\n    Datepicker.prototype.getValue = function () {\n      return this.eInput.value;\n    };\n    Datepicker.prototype.destroy = function () {};\n    Datepicker.prototype.isPopup = function () {\n      return false;\n    };\n    return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n}\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit\n} from './ActionGrid'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetKeys from '../../../api/APIGetKeys'\nimport APIUpdateKey from '../../../api/APIUpdateKey'\n\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'ID', field: 'id', sortable: true, filter: true, editable: false},\n    { headerName: 'Key', field: 'key', sortable: true, filter: true, editable: false, width: 400 },\n    { headerName: 'Name', field: 'name', sortable: true, filter: true,  cellRenderer: onClickEdit() },\n    { headerName: 'Owner', field: 'owner', sortable: true, filter: true, editable: false },\n    {\n        headerName: 'Expires at', field: 'expiresAt', sortable: true, filter: true,  cellRenderer: onClickEdit(),\n        valueFormatter: (params: any) => {\n            var localDateTime = new Date(params.value).toLocaleDateString();\n            return localDateTime;\n        }\n    },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n}\n\nconst onRowValueChanged = (event: any) => {\n    // var expiredAt = new Date(event.data.expiresAt).toLocaleDateString();\n    console.log(event.data)\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                const { id, name, expiresAt } = event.data\n                APIUpdateKey(id, name, expiresAt)\n                .then((res) => console.log(res))\n                .catch((err) => console.log(err))\n                swal(\"Updated!\", \"Your key has been updated!\", \"success\");\n            }\n        });\n}\n\nconst KeyGrid: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        APIGetKeys(token)\n            .then((data) => setRowData(data))\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine tcl-mask\"\n            style={{\n                width: '70%',\n                height: '500px'\n            }}\n        >\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                onRowValueChanged={onRowValueChanged}\n            />\n\n        </div>\n    );\n}\n\nexport default KeyGrid;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(id, name, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetKeys(token) {\n  return axios.get(constants.baseAddress +'key', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React from 'react'\nimport './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport Add from '@material-ui/icons/Add';\nimport APICreateKey from '../../../api/APICreateKey'\nimport 'reactjs-popup/dist/index.css';\n\ninterface Props { }\n\nfunction CreateKey(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const owner = event.target['owner'].value\n    const expire = event.target['expire'].value\n    console.log(expire)\n    APICreateKey(name, owner, expire)\n      .then((results: any) => {\n        if (results.status === 400) alert(results.data)\n        else {\n          alert('created success')\n          window.location.reload(false)\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup trigger={\n        <Tooltip title=\"Create a new key\">\n          <IconButton>\n            <Add />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new key </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\" className=\"form-control\" id=\"inputAddress\" placeholder='' />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress2\">Owner</label>\n                  <input type=\"text\" name=\"owner\" className=\"form-control\" id=\"inputAddress2\" placeholder='' />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress2\">Expires At</label>\n                  <input id=\"party\" name=\"expire\" type=\"datetime-local\" defaultValue=\"2022-01-01T00:00\" />\n                </div>\n                <Button style = {{marginTop: '20px'}} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateKey\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateKey(name, owner, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"owner\": owner,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","// import './style.css'\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        // if (action === \"delete\") {\n        //     console.log(params.data)\n        //     const { name } = params.data\n        //     swal({\n        //         title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n        //         text: \"Once deleted, you will not be able to recover this key!\",\n        //         icon: \"warning\",\n        //         // @ts-ignore\n        //         buttons: true,\n        //         dangerMode: true,\n        //     })\n        //         .then(willDelete => {\n        //             if (willDelete) {\n        //                 swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n        //                 params.api.applyTransaction({\n        //                     remove: [params.node.data]\n        //                 });\n        //             }\n        //         });\n        // }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n    Datepicker.prototype.init = function (params: any) {\n      this.eInput = document.createElement('input');\n      this.eInput.value = params.value;\n      this.eInput.classList.add('ag-input');\n      this.eInput.style.height = '100%';\n      $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n    };\n    Datepicker.prototype.getGui = function () {\n      return this.eInput;\n    };\n    Datepicker.prototype.afterGuiAttached = function () {\n      this.eInput.focus();\n      this.eInput.select();\n    };\n    Datepicker.prototype.getValue = function () {\n      return this.eInput.value;\n    };\n    Datepicker.prototype.destroy = function () {};\n    Datepicker.prototype.isPopup = function () {\n      return false;\n    };\n    return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n}\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit\n} from './ActionTarget'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetTargets from '../../../api/APIGetTargets'\nimport APIUpdateTarget from '../../../api/APIUpdateTarget'\n\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'ID', field: 'id', sortable: true, filter: true, editable: false},\n    { headerName: 'Name', field: 'name', sortable: true, filter: true ,  cellRenderer: onClickEdit()},\n    { headerName: 'Details', field: 'details', sortable: true, filter: true },\n    { headerName: 'URL', field: 'url', sortable: true, filter: true, width: 300 },\n    // { headerName: 'Key', field: 'owner', sortable: true, filter: true, editable: false },\n    // { headerName: 'Key Name', field: 'owner', sortable: true, filter: true, editable: false },\n    // { headerName: 'Key Owner', field: 'owner', sortable: true, filter: true, editable: false },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n}\n\nconst onRowValueChanged = (event: any) => {\n    // var expiredAt = new Date(event.data.expiresAt).toLocaleDateString();\n    console.log(event.data)\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                console.log(event.data)\n                const { name, details, url, id } = event.data\n                APIUpdateTarget(name, details, url, id)\n                .then((res) => console.log(res))\n                .catch((err) => console.log(err))\n                swal(\"Updated!\", \"Your key has been updated!\", \"success\");\n            }\n        });\n}\n\nconst KeyTarget: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        APIGetTargets(token)\n            .then((data) => {\n                console.log(data)\n                setRowData(data)\n            })\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine tcl-mask\"\n            style={{\n                width: '70%',\n                height: '500px'\n            }}\n        >\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                onRowValueChanged={onRowValueChanged}\n            />\n\n        </div>\n    );\n}\n\nexport default KeyTarget;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(name, details, url, id) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"details\": details,\n        \"url\": url\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetTargets(token) {\n  return axios.get(constants.baseAddress +'target', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React from 'react'\nimport './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport Add from '@material-ui/icons/Add';\nimport APICreateTarget from '../../../api/APICreateTarget'\nimport 'reactjs-popup/dist/index.css';\n\ninterface Props { }\n\nfunction CreateTarget(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const key = event.target['key'].value\n    const url = event.target['url'].value\n    const details = event.target['details'].value\n    APICreateTarget(key, name, url, details)\n      .then((results: any) => {\n        if (results.status === 400) alert(results.data)\n        else {\n          alert('created success')\n          window.location.reload(false)\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup trigger={\n        <Tooltip title=\"Create a new key\">\n          <IconButton>\n            <Add />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new key </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\" className=\"form-control\" id=\"inputAddress\" placeholder='' />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress2\">Key</label>\n                  <input type=\"text\" name=\"key\" className=\"form-control\" id=\"inputAddress2\" placeholder='' />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress2\">URL</label>\n                  <input type=\"text\" name=\"url\" className=\"form-control\" id=\"inputAddress2\" placeholder='http://nmas.nome.fi:' defaultValue=\"http://nmas.nome.fi:\"/>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"inputAddress2\">Details</label>\n                  <input type=\"text\" name=\"details\" className=\"form-control\" id=\"inputAddress2\" placeholder='' />\n                </div>\n                <Button style = {{marginTop: '20px'}} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateTarget\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateTarget(key, name, url, details) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n            \"key\": key,\n            \"name\": name,\n            \"url\": url,\n            \"details\": details\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React, { useEffect, useState } from 'react'\nimport KeyGrid from './grid/KeyGrid'\nimport CreateKey from './actions/CreateKey'\nimport HeadingKeys from './fragment/HeadingKeys'\nimport HeadingActiveKeys from './fragment/HeadingActiveKeys'\nimport KeyTarget from './KeyTargets/KeyTarget'\nimport CreateTarget from './actions/CreateTarget'\n\nimport './styles.css'\n\ninterface Props {\n    getNewToken: () => void;\n}\n\nconst AppContent: React.FC<Props> = ({\n    getNewToken\n}) => {\n\n    useEffect(() => {\n        getNewToken()\n    },[])\n    \n\n    return (\n        <div className=\"container\">\n            {/* <HeadingKeys/>\n            <HeadingActiveKeys/> */}\n            <CreateKey/>\n            <h1>Available Keys</h1>\n            <KeyGrid/>\n            <br/>\n            <h1>Active Targets</h1>\n            <CreateTarget/>\n            <KeyTarget/>\n        </div>\n    );\n}\n\nexport default AppContent\n","import React, { useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { appBarTheme } from './appBarTheme'\nimport clsx from 'clsx';\nimport Navbar from './layout/Navbar'\nimport Sidebar from './layout/Sidebar'\nimport AppContent from './AppContent'\nimport APIRefreshToken from '../../api/APIRefreshToken'\n\ninterface Props {\n}\n\nconst Appbar: React.FC<Props> = ({\n}) => {\n\n    const classes = appBarTheme();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => setOpen(true);\n\n    const handleDrawerClose = () => setOpen(false);\n\n    const onLogOut = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n    }\n    const getNewToken = () => {\n        var rToken = localStorage.getItem('refreshToken');\n        APIRefreshToken(rToken)\n            .then((results) => {\n                if (results === 401 || results === 403) {\n                    alert('Please login!')\n                    onLogOut()\n                    window.location.reload(false)\n                } else {\n                    localStorage.setItem('token', results.token)\n                }\n            })\n            .catch(error => console.error(error))\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            var token = localStorage.getItem('token');\n                if(token !== null) {\n                    getNewToken()\n                    console.log('This will run every 30 seconds!');\n                }\n            }, 30000);\n            return () => clearInterval(interval);\n    })\n\n    const TOKEN = localStorage.getItem('token')\n\n    if (TOKEN) {\n        return (\n            <div className={classes.root}>\n\n                <Navbar\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    onLogOut={onLogOut}\n                />\n\n                <Sidebar\n                    open={open}\n                    handleDrawerClose={handleDrawerClose}\n                />\n\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n\n                    {/* MAIN CONTENT */}\n                    <AppContent getNewToken = {getNewToken} />\n\n                </main>\n            </div>\n        );\n    } else return (\n        <><Redirect to='/' /></>\n    )\n}\n\nexport default Appbar\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIRefreshToken(rToken) {\n    return axios.post(constants.baseAddress+'/login', {\n        \"token\" : rToken\n    })\n    .then(response => response.data)\n    .catch(error => \n        error.response.status\n    );\n    \n}","import { useEffect } from 'react';\nimport AppBar from './Appbar'\n\ninterface Props {\n\n}\n\nconst Dashboard: React.FC<Props> = () => {\n\n    \n\n    useEffect(() => {\n\n    })\n\n    return (\n        <>\n            <AppBar/>\n        </>\n    )\n}\n\nexport default Dashboard;","import { Link } from 'react-router-dom';\n\nconst NotFound: React.FC<void> = () => {\n    return (\n        <div>\n            <h1>404</h1>\n            <h2>Error: 404 page not found</h2>\n            <p>Sorry, the page you're looking for cannot be accessed</p>\n            <Link to=\"/\">\n                Click here to go back to home\n            </Link>\n        </div >\n    );\n}\n\nexport default NotFound;","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from './auth/Login'\nimport Dashboard from './dashboard/Dashboard'\nimport NotFound from './NotFound'\n\ninterface Props {\n}\n\nconst Main: React.FC<Props> = ( { } ) => {\n    return (\n        <>  \n            <Switch>\n                <Route path=\"/\" exact render={(routeProps) => <Login {...routeProps} onLoginRedirect=\"/dashboard\" />}/>\n                <Route path=\"/dashboard\" exact render={(routeProps) => <Dashboard {...routeProps} />}/>\n                <Route component={NotFound} />\n            </Switch>\n        </>\n    )\n}\n\nexport default Main;\n\n","import React from 'react'\nimport Main from './components/Main'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\ninterface Props {\n\n}\n\nconst App : React.FC<Props>= ( {  } ) => {\n  return (\n    <Router>\n        <Main/>\n    </Router>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}