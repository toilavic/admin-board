{"version":3,"sources":["components/auth/loginTheme.ts","components/auth/Login.tsx","components/auth/useForm.ts","api/APILogin.js","components/dashboard/progress/HeadingTheme.ts","api/APIGetKeys.js","components/dashboard/progress/HeadingKeys.tsx","api/APIGetTargets.js","components/dashboard/progress/HeadingActiveKeys.tsx","components/dashboard/appBarTheme.ts","components/dashboard/actions/CreateKey.tsx","api/APICreateKey.js","components/dashboard/actions/CreateTarget.tsx","api/APICreateTarget.js","api/APIGetUserByKey.js","components/dashboard/actions/ShowAllUsers/ActionAllUsers.tsx","api/APIUpdateUserTarget.js","components/dashboard/actions/ShowAllUsers/index.tsx","components/dashboard/actions/UserGrid.tsx","components/dashboard/actions/SearchUserKey.tsx","api/APIGetAllUsers.js","components/dashboard/actions/ActionTheme.ts","components/dashboard/actions/index.tsx","components/dashboard/KeyTargets/ActionTarget.tsx","api/APIDeleteTarget.js","components/dashboard/grid/UserGridInfo.tsx","components/dashboard/grid/OpenEmail.tsx","components/dashboard/KeyTargets/KeyTarget.tsx","api/APIUpdateTarget.js","components/dashboard/Dashboard.tsx","components/dashboard/grid/ActionGrid.ts","components/dashboard/grid/KeyGrid.tsx","api/APIUpdateKey.js","components/dashboard/layout/Navbar.tsx","api/APIRefreshToken.js","components/dashboard/layout/Sidebar.tsx","components/dashboard/Appbar.tsx","components/Main.tsx","App.tsx","theme.tsx","index.tsx"],"names":["loginTheme","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","onLoginRedirect","history","callback","initialState","useState","values","setValues","onChange","event","target","name","value","onSubmit","a","preventDefault","useForm","userInfo","axios","post","constants","baseAddress","then","response","catch","error","data","status","message","alert","user","permissionLevel","localStorage","setItem","token","refreshToken","push","email","password","classes","getItem","to","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Button","color","HeadingTheme","maxWidth","borderRadius","padding","lineHeight","boxShadow","transition","transform","keys","keyIcon","marginLeft","fontSize","justifyContent","bullet","title","fontWeight","pos","marginBottom","APIGetKeys","get","headers","res","console","HeadingKeys","TOKEN","React","availableKeys","setAvailableKeys","useEffect","length","log","Card","CardContent","gutterBottom","CardActions","href","size","APIGetTargets","Storage","drawerWidth","appBarTheme","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","items","selected","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","CreateKey","props","owner","expire","keyRequiredInfo","config","method","url","APICreateKey","results","KEY","key","swal","text","button","element","attributes","placeholder","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","icon","closeOnDocumentClick","trigger","Tooltip","IconButton","modal","close","onClick","htmlFor","defaultValue","style","CreateTarget","details","APICreateTarget","window","location","reload","APIGetUserByKey","requiredInfo","params","onCellClicked","column","colId","dataset","action","closeModal","portId","result","map","e","port","parseInt","slice","obj","userId","keyId","APIUpdateUserTarget","stopLoading","err","api","stopEditing","onRowEditingStarted","refreshCells","columns","rowNodes","node","force","onRowEditingStopped","initColumnDefs","headerName","field","sortable","flex","editable","filter","floatingFilter","minWidth","cellRenderer","eGui","isCurrentRowEditing","getEditingCells","some","cell","rowIndex","innerHTML","defaultColDef","resizable","colSpan","Index","usersInfo","columnDefs","rowData","rowSelection","editType","suppressClickEdit","enableRangeSelection","suppressCopyRowsToClipboard","UserGrid","domLayout","SearchUserKey","allUsers","setAllUser","setUsersInfo","onShowAllUsers","setOnShowAllUsers","users","undefined","onShowUsers","APIGetAllUsers","float","ShowAllUsers","ActionTheme","startEditingCell","colKey","columnApi","getDisplayedCenterColumns","buttons","dangerMode","willDelete","delete","APIDeleteTarget","applyTransaction","remove","UserGridInfo","overlayLoadingTemplate","OpenEmail","show","onSetShow","selectedKey","open","onClose","valueGetter","onRowValueChanged","APIUpdateTarget","KeyTarget","setRowData","setSelectedKey","onCellDoubleClicked","clipboardDeliminator","stopEditingWhenCellsLoseFocus","AppContent","getDatePicker","Datepicker","prototype","init","this","eInput","$","datepicker","dateFormat","getGui","afterGuiAttached","focus","getValue","destroy","isPopup","cellEditor","valueFormatter","today","Date","toISOString","substring","localDateTime","Math","floor","parse","APIUpdateKey","expiresAt","KeyGrid","components","datePicker","Navbar","handleDrawerOpen","onLogOut","AppBar","position","clsx","background","Toolbar","aria-label","edge","noWrap","APIRefreshToken","rToken","Sidebar","handleDrawerClose","useTheme","selectedIndex","setSelectedIndex","handleListItemClick","index","pathname","Drawer","anchor","direction","ChevronLeft","ChevronRight","List","ListItem","NavLink","ListItemIcon","Timeline","ListItemText","primary","Appbar","Main","setOpen","exact","path","render","routeProps","removeItem","Dashboard","App","createMuiTheme","red","A400","default","ReactDOM","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.75db19eb.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const loginTheme = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(img/chess.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(2,0,2),\n    },\n}));","import React, { useState } from 'react';\nimport { loginTheme } from './loginTheme'\nimport { Link, Redirect } from 'react-router-dom'\nimport { History, LocationState } from \"history\";\nimport UserType from './UserType'\nimport { Typography, Paper, Grid, TextField, CssBaseline, Button, Avatar } from '@material-ui/core';\nimport { useForm } from \"./useForm\";\nimport APILogin from '../../api/APILogin'\n\ninterface Props { \n    onLoginRedirect: string,\n    history: History<LocationState>\n}\n\nconst Login: React.FC<Props> = ({\n    onLoginRedirect,\n    history\n }) => {\n\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    // getting the event handlers from our custom hook\n    const { onChange, onSubmit, values } = useForm(\n        loginUserCallback,\n        initialState\n    );\n\n    function loginUserCallback() {\n        APILogin(values)\n            .then((data) => {\n                if (data.status === 401) {\n                    const message: string = data.data\n                    alert(message)\n                } else {\n                    const userInfo: UserType = data.data\n                    if (userInfo) {\n                        if (userInfo.user.permissionLevel === \"admin\") {\n                            localStorage.setItem(\"token\", userInfo.token)\n                            localStorage.setItem(\"refreshToken\", userInfo.refreshToken)\n                            history.push(onLoginRedirect)\n                        } else {\n                            alert('you are not admin')\n                        }\n                    }\n                }\n            })\n    }\n\n    const classes = loginTheme();\n    const isLogin = localStorage.getItem('token')\n    \n    if (!isLogin) {\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n    \n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                </Typography>\n    \n                        {/* form */}\n                        <form className={classes.form} noValidate onSubmit={onSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Username\"\n                                name=\"email\"\n                                onChange={onChange}\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                onChange={onChange}\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                  </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    } else return <><Redirect to=\"/dashboard\"/></>\n}\n\nexport default Login\n","import { useState } from \"react\";\n\n// useForm functional componen\nexport const useForm = (callback: any, initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };\n\n    // onSubmit\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await callback(); // triggering the callback\n    };\n\n    // return values\n    return {\n        onChange,\n        onSubmit,\n        values,\n    };\n\n}\n\n    ","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APILogin(userInfo) {\n    return axios.post(constants.baseAddress+'login', userInfo)\n  .then(response => response)\n  .catch(function (error) {\n    if (error.response) {\n      return error.response;\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    }\n  })\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const HeadingTheme = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        borderRadius: 40,\n        padding: 30,\n        lineHeight: 1.5,\n        boxShadow: `0px 2px 8px rgba(0,0,0,0.05)`,\n        transition: 'transform 280ms ease-in-out, box-shadow 200ms ease-in-out',\n        '&:hover': {\n            transform: 'translateY(-10px)',\n            boxShadow: '0px 4px 16px rgba(0,0,0,0.1)'\n        },\n    },\n    keys: {\n        marginTop: 20,\n        display: 'flex'\n    },\n    keyIcon: {\n        marginLeft: 20,\n        fontSize: 34,\n        transform: 'rotate(-90deg)',\n        color: 'rgb(37, 150, 190)',\n        \n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '7px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 400\n    },\n    pos: {\n        marginBottom: 12,\n    }\n}));","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetKeys(token) {\n  return axios.get(constants.baseAddress +'key', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React, { useEffect } from 'react';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\nimport { HeadingTheme } from './HeadingTheme';\nimport APIGetKeys from '../../../api/APIGetKeys';\n\nexport default function HeadingKeys() {\n\n  const classes = HeadingTheme();\n  const TOKEN = localStorage.getItem('token')\n\n  const [availableKeys, setAvailableKeys] = React.useState(0)\n\n  useEffect(() => {\n    APIGetKeys(TOKEN)\n        .then((data) => {\n          setAvailableKeys(data.length)\n        })\n        .catch((error) => console.log(error))\n})\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} gutterBottom>\n          Available Keys\n        </Typography>\n        <Typography className={classes.keys} variant=\"h4\" component=\"h5\">\n          {availableKeys}\n          <VpnKeyIcon className={classes.keyIcon}/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button href=\"/dashboard/keys\" size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetTargets(token) {\n  return axios.get(constants.baseAddress +'target', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React, { useEffect } from 'react';\nimport { Storage } from '@material-ui/icons';\nimport { Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\nimport { HeadingTheme } from './HeadingTheme';\nimport APIGetTargets from '../../../api/APIGetTargets';\n\nexport default function HeadingKeys() {\n\n  const classes = HeadingTheme();\n  const TOKEN = localStorage.getItem('token')\n\n  const [availableKeys, setAvailableKeys] = React.useState(0)\n\n  useEffect(() => {\n    APIGetTargets(TOKEN)\n        .then((data) => setAvailableKeys(data.length))\n        .catch((error) => console.log(error))\n}, [])\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} gutterBottom>\n          Available Targets\n        </Typography>\n        <Typography className={classes.keys} variant=\"h4\" component=\"h5\">\n          {availableKeys}\n          <Storage className={classes.keyIcon}/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 220;\n\nexport const appBarTheme = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      height: 55,\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      height: 55,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    \n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    \n    title: {\n      fontSize: 14,\n      fontWeight: 500,\n      marginLeft: 20\n    },\n    items: {\n      fontSize: 15,\n      marginTop: '0.2rem'\n    },\n    selected: {\n      backgroundColor: \"rgb(197, 250, 211) !important\",\n      color: \"green\",\n      fontWeight: 60\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    \n  }));","import VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport APICreateKey from '../../../api/APICreateKey'\nimport 'reactjs-popup/dist/index.css';\nimport swal from 'sweetalert';\n\ninterface Props { }\n\nfunction CreateKey(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const owner = event.target['owner'].value\n    const expire = event.target['expire'].value\n    APICreateKey(name, owner, expire)\n      .then((results: any) => {\n        console.log(results)\n        if (results.status === 400) {\n          alert(results.data)\n        }\n        else if (results.status === 403) alert(results.data)\n        else {\n          const KEY = results.data.key\n          swal({\n            text: 'Key created',\n            // @ts-ignore\n            button: {\n              text: \"Copy key\",\n            },\n            content: {\n              element: \"input\",\n              attributes: {\n                placeholder: \"key\",\n                type: \"input\",\n                value: KEY,\n              },\n\n            },\n          })\n            .then(() => {\n              var dummy = document.createElement(\"textarea\");\n              // to avoid breaking orgain page when copying more words\n              // cant copy when adding below this code\n              // dummy.style.display = 'none'\n              document.body.appendChild(dummy);\n              //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\n              dummy.value = KEY\n              dummy.select();\n              document.execCommand(\"copy\");\n              document.body.removeChild(dummy);\n              swal(\"Key copied!\", {\n                icon: \"success\",\n              });\n            });\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup closeOnDocumentClick={false} trigger={\n        <Tooltip title=\"Create a new key\">\n          <IconButton>\n            <VpnKeyIcon />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new key </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div>\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\"  placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Owner</label>\n                  <input type=\"text\" name=\"owner\" placeholder='' />\n                </div>\n                <div >\n                  Expires At\n                  <input name=\"expire\" type=\"datetime-local\" defaultValue=\"2022-01-01T00:00\" />\n                <Button style={{ marginTop: '20px' }} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </div>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateKey\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateKey(name, owner, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"owner\": owner,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport { Storage } from '@material-ui/icons';\nimport APICreateTarget from '../../../api/APICreateTarget'\nimport 'reactjs-popup/dist/index.css';\n\ninterface Props { }\n\nfunction CreateTarget(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const key = event.target['key'].value\n    const url =  \"http://nmas.nome.fi:\" +event.target['url'].value\n    const details = event.target['details'].value\n    APICreateTarget(key, name, url, details)\n      .then((results: any) => {\n        console.log(results)\n        if (results.status === 400) alert(results.data)\n        else if (results.status === 403) alert(results.data)\n        else {\n          alert('created success !')\n          window.location.reload(false)\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup trigger={\n        <Tooltip title=\"Create a new target\">\n          <IconButton>\n            <Storage />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new target </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div>\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\" placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Key</label>\n                  <input type=\"text\" name=\"key\" placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Port</label>\n                  <input type=\"text\" name=\"url\" placeholder='50000'/>\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Details</label>\n                  <input type=\"text\" name=\"details\" placeholder='' />\n                </div>\n                <Button style = {{marginTop: '20px'}} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateTarget\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateTarget(key, name, url, details) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n            \"key\": key,\n            \"name\": name,\n            \"url\": url,\n            \"details\": details\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIGetUserByKey(key) {\n\n    const token = localStorage.getItem('token')\n\n    var requiredInfo = {\n        \"includeUsers\": true,\n        \"key\": key\n    }\n\n    var config = {\n        method: 'get',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        params : requiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n            }\n        })\n}\n","import swal from 'sweetalert';\nimport APIGetTargets from '../../../../api/APIGetTargets';\nimport APIUpdateUserTarget from '../../../../api/APIUpdateUserTarget';\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\" style=\"color:green\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\" style=\"color:blue\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            console.log(params.data)\n            // params.api.startEditingCell({\n            //     rowIndex: params.node.rowIndex,\n            //     // gets the first columnKey\n            //     colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            // });\n            const { id } = params.data\n            swal({\n                text: 'Change user to available port. E.g: 50001',\n                // @ts-ignore\n                content: \"input\",\n                button: {\n                  text: \"Search!\",\n                  closeModal: false,\n                },\n              })\n              .then(name => {\n                if (!name) throw null;\n                let token = localStorage.getItem('token');\n                let tempResult, portId: Number;\n                APIGetTargets(token)\n                .then(result => {\n                    tempResult = result.map((e: any) => {\n                        return {\n                            id : e.key.id\n                            , port : parseInt(e.url.slice(20))\n                        } \n                    })\n                    \n                    tempResult.map((obj: any) => {\n                        if(name == obj.port) {\n                            portId = obj.id\n                        }\n                    })  \n                    if(portId > 0) {\n                        APIUpdateUserTarget(id, portId)\n                        .then(result => {\n                             // @ts-ignore\n                            swal.stopLoading();\n                            // @ts-ignore\n                            swal.close();\n                            alert('Change port Ok')\n                        })\n                        .catch(error => console.log(error));\n                    }else {\n                        // @ts-ignore\n                        swal.stopLoading();\n                        // @ts-ignore\n                        swal.close();\n                        alert('wrong port')\n                    } \n\n                })\n              })\n              .catch(err => {\n                if (err) {\n                  swal(\"Oh noes!\", \"The AJAX request failed!\", \"error\");\n                } else {\n                }\n              });\n        }\n\n        if (action === \"delete\") {\n            \n        }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n}\n\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateUserTarget(userId, keyId) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"keyId\": keyId,\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'user/' +userId,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React from 'react'\nimport { AgGridReact } from 'ag-grid-react';\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n} from './ActionAllUsers'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\ninterface Props {\n    usersInfo: any\n }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, flex: 1 },\n    { headerName: 'Email', field: 'email', sortable: true, editable: false, flex: 1, filter : \"agTextColumnFilter\", floatingFilter: true },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    resizable: true,\n    colSpan: colSpan,\n    filter: true,\n}\n\n\nconst Index: React.FC<Props> = ({ usersInfo }) => {\n\n    const style = {\n        height: '80%',\n        width: '80%'\n    }\n\n    return (\n        <div className=\"ag-theme-alpine\"\n            style={{\n                width: '100%',\n                height: '500px',\n                marginLeft: '50px'\n            }}\n        >\n            <h4>Result</h4>\n            \n            <div style = {style} >\n                <AgGridReact\n                    columnDefs={initColumnDefs}\n                    rowData={usersInfo}\n                    onRowEditingStopped={onRowEditingStopped}\n                    onRowEditingStarted={onRowEditingStarted}\n                    onCellClicked={onCellClicked}\n                    rowSelection=\"multiple\"\n                    editType=\"fullRow\"\n                    defaultColDef={defaultColDef}\n                    suppressClickEdit={true}\n                    enableRangeSelection={true}\n                    // domLayout=\"autoHeight\"\n                    suppressCopyRowsToClipboard={true}\n                />\n            </div>\n\n        </div>\n    );\n}\n\nexport default Index;\n","import React from 'react'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\ninterface Props {\n    usersInfo: any\n }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, filter: true, flex: 1 },\n    { headerName: 'Email', field: 'email', sortable: true, filter: true, editable: false, flex: 1 }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    resizable: true,\n    colSpan: colSpan,\n    filter: true,\n}\n\n\nconst UserGrid: React.FC<Props> = ({ usersInfo }) => {\n\n    return (\n        <div className=\"ag-theme-alpine\"\n            style={{\n                width: '80%',\n                height: '350px',\n                marginLeft: '50px'\n            }}\n        >\n            <h4>Result</h4>\n                <AgGridReact\n                    columnDefs={initColumnDefs}\n                    rowData={usersInfo}\n                    rowSelection=\"multiple\"\n                    editType=\"fullRow\"\n                    defaultColDef={defaultColDef}\n                    suppressClickEdit={true}\n                    enableRangeSelection={true}\n                    domLayout=\"autoHeight\"\n                    suppressCopyRowsToClipboard={true}\n                />\n        </div>\n    );\n}\n\nexport default UserGrid;\n","import './style.css'\nimport React, { useEffect } from 'react'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport 'reactjs-popup/dist/index.css';\n\nimport APIGetUserByKey from '../../../api/APIGetUserByKey'\nimport APIGetAllUsers from '../../../api/APIGetAllUsers';\n\nimport ShowAllUsers from './ShowAllUsers';\nimport UserGrid from './UserGrid';\n\n\ninterface Props { }\n\nfunction SearchUserKey(props: Props) {\n\n    const [allUsers, setAllUser] = React.useState([])\n    const [usersInfo, setUsersInfo] = React.useState([]);\n    const [onShowAllUsers, setOnShowAllUsers] = React.useState(false)\n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        const key = event.target['key'].value\n        APIGetUserByKey(key)\n            .then((results: any) => {\n                console.log(results.data[0].users)\n                if (results.data[0] === undefined) alert('Invalid key')\n                else setUsersInfo(results.data[0].users)\n            })\n    }\n\n    const onShowUsers = () => {\n        APIGetAllUsers()\n        .then((result) => setAllUser(result))\n        .catch((error) => console.log('SHOW USERS ERROR' , error))\n        setOnShowAllUsers(!onShowAllUsers)\n    }\n    \n\n    return (\n        <>\n            <Popup trigger={\n                <Tooltip title=\"Search users by key\">\n                    <IconButton>\n                        <SearchIcon />\n                    </IconButton>\n                </Tooltip>} modal closeOnDocumentClick = {false}>\n                {(close: any) => (\n                    <div className=\"modal\">\n                        <button className=\"close\" onClick={close}>\n                            &times;\n                        </button>\n                        <div className=\"header\"> Search users by key </div>\n                        <div>\n                            {/* form - FOR ONLY KEYS SEARCHING*/}\n                            <form onSubmit={onSubmit}>\n                                <br />\n                                <>Key: <input type=\"text\" name=\"key\" className=\"form-control key-input\" id=\"inputAddress\" placeholder='' />&nbsp; </>\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => setOnShowAllUsers(false)}><SearchIcon /></Button>\n                                <Button style={{ float: 'right', marginRight: '7.5rem' }} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={onShowUsers}>\n                                    {onShowAllUsers ? 'Hide' : 'Show'} all users</Button>\n                                    {\n                                        onShowAllUsers && <div>\n                                            {/* form - FOR ALL KEYS SEARCHING*/}\n                                            <ShowAllUsers usersInfo={allUsers} />\n                                            <br />\n                                        </div>\n                                    }\n                                    \n                                    {\n                                        !onShowAllUsers && <div>\n                                            <UserGrid usersInfo={usersInfo} />\n                                            <br />\n                                        </div>\n                                    }\n\n                                <br />\n                            </form>\n                        </div>\n                        <button className=\"close\" onClick={() => { close() }}>&times;</button>\n                    </div>\n                )}\n            </Popup>\n        </>\n    )\n}\n\nexport default SearchUserKey;\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetAllUsers() {\n  const token = localStorage.getItem('token')\n  return axios.get(constants.baseAddress +'user', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const ActionTheme = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        borderRadius: 40,\n        padding: 30,\n        lineHeight: 1.5,\n        boxShadow: `0px 2px 8px rgba(0,0,0,0.05)`,\n    }\n    \n}));","import React from 'react'\nimport CreateKey from './CreateKey'\nimport CreateTarget from './CreateTarget'\nimport SearchUserKey from './SearchUserKey'\nimport { Card,CardContent } from '@material-ui/core';\nimport { ActionTheme } from './ActionTheme'\ninterface Props { }\n\nconst Index: React.FC<Props> = ({ }) => {\n\n    const classes = ActionTheme();\n\n    return (\n        <>\n            <h1>Tools</h1>\n            \n            <Card className={classes.root}>\n                <CardContent>\n                    <CreateKey />\n                    <CreateTarget />\n                    <SearchUserKey/>\n                </CardContent>\n            </Card>\n        </>\n    )\n}\n\nexport default Index;\n","import swal from 'sweetalert';\nimport APIDeleteTarget from '../../../api/APIDeleteTarget';\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\" style=\"color:green\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\" style=\"color:blue\"></i>\n    <i class=\"fa fa-trash\" data-action=\"delete\" style=\"color:red\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        if (action === \"delete\") {\n            console.log(params.data)\n            const { id, name } = params.data\n            swal({\n                title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n                text: \"Once deleted, you will not be able to recover this key!\",\n                icon: \"warning\",\n                // @ts-ignore\n                buttons: true,\n                dangerMode: true,\n            })\n                .then(willDelete => {\n                    if (willDelete) {\n                        APIDeleteTarget(id)\n                        .then(result => console.log(result))\n                        .catch(error => console.error(error))\n                        swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n                        params.api.applyTransaction({\n                            remove: [params.node.data]\n                        });\n                    }\n                });\n        }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n    Datepicker.prototype.init = function (params: any) {\n      this.eInput = document.createElement('input');\n      this.eInput.value = params.value;\n      this.eInput.classList.add('ag-input');\n      this.eInput.style.height = '100%';\n      $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n    };\n    Datepicker.prototype.getGui = function () {\n      return this.eInput;\n    };\n    Datepicker.prototype.afterGuiAttached = function () {\n      this.eInput.focus();\n      this.eInput.select();\n    };\n    Datepicker.prototype.getValue = function () {\n      return this.eInput.value;\n    };\n    Datepicker.prototype.destroy = function () {};\n    Datepicker.prototype.isPopup = function () {\n      return false;\n    };\n    return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n}\n\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIDeleteTarget(id) {\n    const TOKEN = localStorage.getItem('token')\n    return axios.delete(constants.baseAddress + 'target/' + id, {\n            headers: {\n                'Authorization': `token ${TOKEN}`\n            }\n        })\n        .then((res) => res.data)\n        .catch((error) => {\n            console.error(error)\n        })\n}","import React from 'react'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\ninterface Props {\n    usersInfo: any\n }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, filter: true, flex: 1 },\n    { headerName: 'Email', field: 'email', sortable: true, filter: true, editable: false, flex: 1 }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n    colSpan: colSpan,\n    filter: true\n}\n\n\nconst UserGridInfo: React.FC<Props> = ({ usersInfo }) => {\n\n    return (\n        <div className=\"ag-theme-alpine\"\n            style={{ width: '90%', marginLeft: '1rem'}}\n        >\n            <AgGridReact\n                columnDefs={initColumnDefs}\n                overlayLoadingTemplate={\n                    '<span className=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>'\n                }\n                rowData={usersInfo}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                domLayout=\"autoHeight\"\n                suppressCopyRowsToClipboard={true}\n            />\n        </div>\n    );\n}\n\nexport default UserGridInfo;\n","import './style.css'\nimport React, { useEffect } from 'react'\nimport Popup from 'reactjs-popup';\nimport APIGetUserByKey from '../../../api/APIGetUserByKey'\nimport 'reactjs-popup/dist/index.css';\nimport UserGridInfo from './UserGridInfo'\ninterface Props { \n    show: boolean,\n    onSetShow: (value: boolean) => void;\n    selectedKey: string;\n}\n\nconst OpenEmail: React.FC<Props> = ({ \n    show, \n    onSetShow, \n    selectedKey \n}) => {\n\n    const [usersInfo, setUsersInfo] = React.useState([]);\n\n    useEffect(() => {\n        APIGetUserByKey(selectedKey)\n        .then((results: any) => {\n            setUsersInfo(results.data[0].users)\n        })\n    }, [selectedKey])\n\n    return (\n        <>\n            {\n                show && <Popup open={show} modal closeOnDocumentClick onClose={() => onSetShow(false)}>\n                {() => (\n                    <div className=\"modal\">\n                        <button className=\"close\" onClick = { () => onSetShow(false)}>\n                            &times;\n                        </button>\n                        <div className=\"header\"> Email </div>\n                        <div>\n                                <br />\n                                <UserGridInfo usersInfo={usersInfo} />\n                                <br />\n                        </div>\n                    </div>\n                )}\n            </Popup>\n            }\n        </>\n    )\n}\n\nexport default OpenEmail;\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n} from './ActionTarget'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetTargets from '../../../api/APIGetTargets'\nimport APIUpdateTarget from '../../../api/APIUpdateTarget'\n\nimport OpenEmail from '../grid/OpenEmail';\nimport { CellClickedEvent } from 'ag-grid-community';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport './style.css'\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, filter : \"agTextColumnFilter\", floatingFilter: true},\n    { headerName: 'Key', field: 'key', editable: false,  sortable: true, filter: true, flex: 1 ,  valueGetter: (params: any) => params.data.key.key },\n    { headerName: 'Details', field: 'details', sortable: true, filter: true, flex: 1 },\n    { headerName: 'URL', field: 'url', sortable: true, flex: 1, filter : \"agTextColumnFilter\", floatingFilter: true },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    // width: 220,\n    resizable: true,\n    colSpan: colSpan,\n}\n\nconst onRowValueChanged = (event: any) => {\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                const { name, details, url, id } = event.data\n                APIUpdateTarget(name, details, url, id)\n                    .then((res) => {\n                        if (res.status === 403) swal(\"Error!\", res.data, \"warning\")\n                        else swal(\"Updated!\", res.data, \"success\")\n                    })\n                    .catch((err) => console.error(err))\n            }\n        });\n}\n\nconst KeyTarget: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n    const [show, onSetShow] = useState(false)\n    const [selectedKey, setSelectedKey] = useState('')\n\n    const onCellDoubleClicked = (params: CellClickedEvent) => {\n        setSelectedKey(params.value)\n        onSetShow(true)\n    }\n    \n    let TOKEN = localStorage.getItem('token')\n\n    useEffect(() => {\n        APIGetTargets(TOKEN)\n            .then((data) => {\n                console.log(data)\n                setRowData(data)\n            })\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine container\"\n            style={{\n                width: '80%',\n                height: '500px',\n                marginTop: '3rem',\n                marginLeft: '0px'\n            }}\n        >            \n            <div id=\"containerIntro\">\n                <h1>Active Targets</h1>\n                &nbsp;\n                <p className=\"tooltip\"><InfoIcon color=\"primary\"/>\n                    <span className=\"tooltiptext\"><b>Double click</b> in <b> key</b> to show the user information!</span>\n                </p>\n            </div>\n            {show && <OpenEmail show={show} onSetShow={onSetShow} selectedKey = {selectedKey}/>}\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                onCellDoubleClicked = {onCellDoubleClicked}\n                overlayLoadingTemplate={\n                    '<span className=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>'\n                }\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                clipboardDeliminator={\",\"}\n                onRowValueChanged={onRowValueChanged}\n                suppressCopyRowsToClipboard={true}\n                stopEditingWhenCellsLoseFocus={true}\n                domLayout=\"autoHeight\"\n            />\n\n        </div>\n    );\n}\n\nexport default KeyTarget;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(name, details, url, id) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"details\": details,\n        \"url\": url\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React from 'react'\nimport HeadingKeys from './progress/HeadingKeys'\nimport HeadingActiveKeys from './progress/HeadingActiveKeys'\nimport { appBarTheme } from './appBarTheme'\nimport Actions from './actions'\nimport KeyTarget from './KeyTargets/KeyTarget'\n\nimport './styles.css'\n\ninterface Props {\n}\n\nconst AppContent: React.FC<Props> = ({\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n\n        <div className=\"container\">\n            <div className={classes.drawerHeader} />\n            <h1>Dashboard</h1>\n\n            <div className=\"progress\">\n                <div className=\"keys\"><HeadingKeys /></div>\n                <div className=\"active-keys\"><HeadingActiveKeys /></div>\n                <div className=\"tools\"><Actions /></div>\n            </div>\n            <div>\n                <KeyTarget/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default AppContent\n","import './style.css'\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/datepicker';\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\" style=\"color:green\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\" style=\"color:blue\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        // if (action === \"delete\") {\n        //     console.log(params.data)\n        //     const { name } = params.data\n        //     swal({\n        //         title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n        //         text: \"Once deleted, you will not be able to recover this key!\",\n        //         icon: \"warning\",\n        //         // @ts-ignore\n        //         buttons: true,\n        //         dangerMode: true,\n        //     })\n        //         .then(willDelete => {\n        //             if (willDelete) {\n        //                 swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n        //                 params.api.applyTransaction({\n        //                     remove: [params.node.data]\n        //                 });\n        //             }\n        //         });\n        // }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n  Datepicker.prototype.init = function(params: any) {\n    this.eInput = document.createElement(\"input\");\n    this.eInput.value = params.value;\n    $(this.eInput).datepicker({ dateFormat: \"yy-mm-ddT00:00:00.000Z\" });\n  };\n  Datepicker.prototype.getGui = function() {\n    return this.eInput;\n  };\n  Datepicker.prototype.afterGuiAttached = function() {\n    this.eInput.focus();\n    this.eInput.select();\n  };\n  Datepicker.prototype.getValue = function() {\n    return this.eInput.value;\n  };\n  Datepicker.prototype.destroy = function() {};\n  Datepicker.prototype.isPopup = function() {\n    return false;\n  };\n  return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n    getDatePicker\n}\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    getDatePicker\n} from './ActionGrid'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetKeys from '../../../api/APIGetKeys'\nimport APIUpdateKey from '../../../api/APIUpdateKey'\nimport { CellClickedEvent } from 'ag-grid-community';\n\nimport OpenEmail from './OpenEmail';\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'Key', field: 'key', sortable: true, filter: true, editable: false, flex: 2 },\n    { headerName: 'Name', field: 'name', sortable: true, filter: true, flex: 1 },\n    { headerName: 'Owner', field: 'owner', sortable: true, filter: true, editable: false, flex: 1 },\n    {\n        headerName: 'Expires at', field: 'expiresAt', sortable: true, filter: true, flex: 1.5, maxWidth: 400, cellEditor: \"datePicker\", \n        valueFormatter: (params: any) => {\n\n            var today = new Date().toISOString().substring(0, 10)\n            var localDateTime = new Date(params.value).toISOString().substring(0, 10);\n            \n            var diff =  Math.floor(( Date.parse(localDateTime) - Date.parse(today) ) / 86400000); \n            \n            return localDateTime + ' (' + diff + ' days left)'\n        }\n    },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n    colSpan: colSpan,\n    filter: true\n}\n\nconst onRowValueChanged = (event: any) => {\n    console.log(event.data)\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                const { id, name, expiresAt } = event.data\n                APIUpdateKey(id, name, expiresAt)\n                    .then((res) => console.log(res))\n                    .catch((err) => console.log(err))\n                swal(\"Updated!\", \"Your key has been updated!\", \"success\");\n            }\n        });\n}\n\nconst KeyGrid: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n    const [show, onSetShow] = useState(false)\n    const [selectedKey, setSelectedKey] = useState('')\n\n    let TOKEN = localStorage.getItem('token')\n\n    const onCellDoubleClicked = (params: CellClickedEvent) => {\n        setSelectedKey(params.value)\n        onSetShow(true)\n    }\n\n    useEffect(() => {\n        APIGetKeys(TOKEN)\n            .then((data) => setRowData(data))\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine container\"\n            style={{\n                width: '80%',\n                height: '500px',\n                marginTop: '100px'\n            }}\n        >\n            <h1>Available Keys</h1>\n            {show && <OpenEmail show={show} onSetShow={onSetShow} selectedKey = {selectedKey}/>}\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                onCellDoubleClicked = {onCellDoubleClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                onRowValueChanged={onRowValueChanged}\n                suppressCopyRowsToClipboard={true}\n                domLayout=\"autoHeight\"\n                // stopEditingWhenCellsLoseFocus={true}\n                components = {{ datePicker: getDatePicker() }}\n            />\n\n        </div>\n    );\n}\n\nexport default KeyGrid;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(id, name, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport clsx from 'clsx';\nimport {Button, CssBaseline, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface Props {\n    open: boolean,\n    handleDrawerOpen: () => void;\n    onLogOut : () => void;\n}\n\nconst Navbar: React.FC<Props> = ({\n    open,\n    handleDrawerOpen,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n        <>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n                color=\"default\"\n                style={{background: 'inherit', boxShadow : 'none'}}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                    </Typography>\n                    <Button href=\"/\" onClick={onLogOut} style={{ marginLeft: '80%', fontSize: 16 }} color=\"inherit\">\n                        Log-out</Button>\n            </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n\nexport default Navbar\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIRefreshToken(rToken) {\n    return axios.post(constants.baseAddress+'/login', {\n        \"token\" : rToken\n    })\n    .then(response => response.data)\n    .catch(error => \n        error.response.status\n    );\n    \n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { appBarTheme } from '../appBarTheme'\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport { List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { Timeline, VpnKey, ChevronLeft, ChevronRight } from '@material-ui/icons';\nimport APIRefreshToken from '../../../api/APIRefreshToken'\nimport APIGetKeys from '../../../api/APIGetKeys'\n\nimport './style.css'\nimport { useEffect } from 'react';\n\ninterface Props {\n    open: boolean,\n    handleDrawerClose: () => void;\n    onLogOut: () => void;\n}\nconst Sidebar: React.FC<Props> = ({\n    open,\n    handleDrawerClose,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme();\n    const theme = useTheme();\n\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    useEffect(() => {\n        switch (window.location.pathname) {\n            case \"/dashboard\":\n                setSelectedIndex(0);\n                break;\n            case \"/dashboard/keys\":\n                setSelectedIndex(1);\n                break;\n            // case \"/dashboard/active-keys\":\n            //     setSelectedIndex(2);\n            //     break;\n\n            default:\n                setSelectedIndex(0);\n                break;\n        }\n    }, [selectedIndex])\n\n\n    // IMPLEMENT THE REFRESH TOKEN\n\n    useEffect(() => {\n        var token = localStorage.getItem('token')\n        var rToken = localStorage.getItem('refreshToken')\n        APIGetKeys(token)\n            .then(result => {\n                if (result === undefined) {\n                    // if token is invalid => get new token and set it\n                    APIRefreshToken(rToken)\n                        .then((result: any) => {\n                            if (result === 403) {\n                                onLogOut();\n                                // @ts-ignore\n                                window.location.reload(false);\n                            }\n                            else {\n                                localStorage.setItem('token', result.token)\n                                // @ts-ignore\n                                window.location.reload(false);\n                            }\n                        })\n                } else {\n                    console.log('token is OKay')\n                }\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n\n\n    useEffect(() => {\n        var token = localStorage.getItem('token')\n        var rToken = localStorage.getItem('refreshToken')\n        APIGetKeys(token)\n            .then(result => {\n                if (result === undefined) {\n                    // if token is invalid => get new token and set it\n                    APIRefreshToken(rToken)\n                        .then((result: any) => {\n                            if (result === 403) {\n                                onLogOut();\n                                // @ts-ignore\n                                window.location.reload(false);\n                            }\n                            else {\n                                localStorage.setItem('token', result.token)\n                                // @ts-ignore\n                                window.location.reload(false);\n                            }\n                        })\n                } else {\n                    console.log('token is OK')\n                }\n            })\n            .catch(error => console.log(error))\n    }, [selectedIndex])\n\n\n    return (\n        <>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton color=\"inherit\" onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                    </IconButton>\n                </div>\n                <Typography className={classes.title} gutterBottom>\n                    GENERAL\n                </Typography>\n                <List component=\"nav\" aria-label=\"main folders\">\n                    <ListItem\n                        button\n                        component={NavLink} to={'/dashboard'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 0}\n                        onClick={(event: any) => handleListItemClick(event, 0)}\n                    >\n                        <ListItemIcon>\n                            <Timeline />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Dashboard\n                        </Typography>} />\n                    </ListItem>\n\n                    <br></br>\n                    <Typography className={classes.title} gutterBottom>\n                        TOOLS\n                    </Typography>\n\n                    <ListItem\n                        button\n                        component={NavLink} to={'/dashboard/keys'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 1}\n                        onClick={(event: any) => handleListItemClick(event, 1)}\n                    >\n                        <ListItemIcon>\n                            <VpnKey />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Keys\n                        </Typography>} />\n                    </ListItem>\n\n                    {/* <ListItem\n                        button\n                        component={NavLink} to={'/dashboard/active-keys'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 2}\n                        onClick={(event: any) => handleListItemClick(event, 2)}\n                    >\n                        <ListItemIcon>\n                            <Storage />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Active Targets\n                        </Typography>} />\n                    </ListItem> */}\n                </List>\n            </Drawer>\n        </>\n    );\n}\n\nexport default Sidebar;\n\n","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { appBarTheme } from './appBarTheme'\nimport Navbar from './layout/Navbar'\nimport Sidebar from './layout/Sidebar'\n\ninterface Props {\n    open: boolean;\n    handleDrawerOpen: () => void;\n    handleDrawerClose: () => void;\n    onLogOut: () => void;\n}\n\nconst Appbar: React.FC<Props> = ({\n    open,\n    onLogOut,\n    handleDrawerClose,\n    handleDrawerOpen\n}) => {\n\n    const classes = appBarTheme()\n\n    const TOKEN = localStorage.getItem('token')\n\n    if (TOKEN) {\n        return (\n            <div className={classes.root}>\n\n                <Navbar\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    onLogOut={onLogOut}\n                />\n\n                <Sidebar\n                    open={open}\n                    handleDrawerClose={handleDrawerClose}\n                    onLogOut={onLogOut}\n                />\n\n            </div>\n        );\n    } else return (\n        <><Redirect to='/' /></>\n    )\n}\n\nexport default Appbar\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './auth/Login'\nimport Dashboard from './dashboard/Dashboard'\nimport KeyGrid from './dashboard/grid/KeyGrid'\n// import NotFound from './NotFound'\nimport Appbar from './dashboard/Appbar'\nimport { appBarTheme } from './dashboard/appBarTheme'\nimport clsx from 'clsx';\nimport KeyTarget from './dashboard/KeyTargets/KeyTarget'\n\ninterface Props {\n}\n\nconst Main: React.FC<Props> = ({ }) => {\n    const classes = appBarTheme();\n\n    const [open, setOpen] = React.useState(true);\n\n    const handleDrawerOpen = () => setOpen(true);\n\n    const handleDrawerClose = () => setOpen(false);\n\n    const onLogOut = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n    }\n\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/\" render={(routeProps) => <Login {...routeProps} onLoginRedirect=\"/dashboard\" />} />\n                <div>\n                    <Appbar open={open} handleDrawerOpen={handleDrawerOpen} \n                                        handleDrawerClose={handleDrawerClose}\n                                        onLogOut = {onLogOut} />\n                    \n                    <main className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                    })}>\n                        <Route path=\"/dashboard\" exact render={(routeProps) => <Dashboard {...routeProps} />} />\n                        {/* <Route component={NotFound} /> */}\n                        <Route path=\"/dashboard/keys\" render={(routeProps) => <KeyGrid  {...routeProps} />} />\n                        <Route path=\"/dashboard/active-keys\" render={(routeProps) => <KeyTarget  {...routeProps} />} />\n                    </main>\n                    \n                </div>\n            </Switch>\n\n        </>\n    )\n}\n\nexport default Main;\n\n","import React from 'react'\nimport Main from './components/Main'\nimport { BrowserRouter as Router } from 'react-router-dom';\ninterface Props {\n\n}\n\nconst App : React.FC<Props>= ( {  } ) => {\n  return (\n    <Router>\n        <Main/>\n    </Router>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f9f9f9',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}