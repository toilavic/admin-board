{"version":3,"sources":["components/auth/loginTheme.ts","components/auth/Login.tsx","components/auth/useForm.ts","api/APILogin.js","components/dashboard/progress/HeadingTheme.ts","api/APIGetKeys.js","components/dashboard/progress/HeadingKeys.tsx","api/APIGetTargets.js","components/dashboard/progress/HeadingActiveKeys.tsx","components/dashboard/appBarTheme.ts","components/dashboard/actions/CreateKey.tsx","api/APICreateKey.js","components/dashboard/actions/CreateTarget.tsx","api/APICreateTarget.js","components/dashboard/actions/UserGrid.tsx","components/dashboard/actions/SearchUserKey.tsx","api/APIGetUserByKey.js","components/dashboard/actions/ActionTheme.ts","components/dashboard/actions/index.tsx","components/dashboard/Dashboard.tsx","components/dashboard/grid/ActionGrid.ts","components/dashboard/grid/KeyGrid.tsx","api/APIUpdateKey.js","components/dashboard/layout/Navbar.tsx","components/dashboard/layout/Sidebar.tsx","components/dashboard/Appbar.tsx","components/dashboard/KeyTargets/ActionTarget.tsx","api/APIDeleteTarget.js","components/dashboard/KeyTargets/KeyTarget.tsx","api/APIUpdateTarget.js","components/Main.tsx","api/APIRefreshToken.js","App.tsx","theme.tsx","index.tsx"],"names":["loginTheme","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","onLoginRedirect","history","callback","initialState","useState","values","setValues","onChange","event","target","name","value","onSubmit","a","preventDefault","useForm","userInfo","axios","post","constants","baseAddress","then","response","catch","error","data","status","message","alert","user","permissionLevel","localStorage","setItem","token","refreshToken","push","email","password","classes","getItem","to","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Button","color","HeadingTheme","maxWidth","borderRadius","padding","lineHeight","boxShadow","transition","transform","keys","keyIcon","marginLeft","fontSize","justifyContent","bullet","title","fontWeight","pos","marginBottom","APIGetKeys","get","headers","res","console","HeadingKeys","TOKEN","React","availableKeys","setAvailableKeys","useEffect","length","log","Card","CardContent","gutterBottom","CardActions","href","size","APIGetTargets","Storage","drawerWidth","appBarTheme","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","items","selected","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","CreateKey","props","owner","expire","keyRequiredInfo","config","method","url","APICreateKey","results","KEY","key","swal","text","button","element","attributes","placeholder","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","icon","closeOnDocumentClick","trigger","Tooltip","IconButton","modal","close","onClick","htmlFor","defaultValue","style","CreateTarget","details","APICreateTarget","window","location","reload","initColumnDefs","headerName","field","sortable","filter","flex","editable","defaultColDef","colSpan","params","UserGrid","usersInfo","columnDefs","rowData","rowSelection","editType","suppressClickEdit","enableRangeSelection","domLayout","suppressCopyRowsToClipboard","SearchUserKey","setUsersInfo","requiredInfo","APIGetUserByKey","users","undefined","ActionTheme","Index","AppContent","onCellClicked","column","colId","dataset","action","api","startEditingCell","rowIndex","node","colKey","columnApi","getDisplayedCenterColumns","stopEditing","onRowEditingStarted","refreshCells","columns","rowNodes","force","onRowEditingStopped","getDatePicker","Datepicker","prototype","init","this","eInput","$","datepicker","dateFormat","getGui","afterGuiAttached","focus","getValue","destroy","isPopup","cellEditor","valueFormatter","today","Date","toISOString","substring","localDateTime","Math","floor","parse","minWidth","cellRenderer","eGui","isCurrentRowEditing","getEditingCells","some","cell","innerHTML","onRowValueChanged","buttons","dangerMode","willDelete","APIUpdateKey","expiresAt","err","KeyGrid","setRowData","interval","setInterval","clearInterval","components","datePicker","Navbar","open","handleDrawerOpen","onLogOut","AppBar","position","clsx","background","Toolbar","aria-label","edge","noWrap","Sidebar","handleDrawerClose","useTheme","selectedIndex","setSelectedIndex","handleListItemClick","index","pathname","Drawer","anchor","direction","ChevronLeft","ChevronRight","List","ListItem","NavLink","ListItemIcon","Timeline","ListItemText","primary","Appbar","delete","APIDeleteTarget","result","applyTransaction","remove","valueGetter","resizable","APIUpdateTarget","KeyTarget","clipboardDeliminator","stopEditingWhenCellsLoseFocus","Main","setOpen","_setToken","removeItem","refreshTokenInEveryThirtySeconds","rToken","APIRefreshToken","exact","path","render","routeProps","Dashboard","App","createMuiTheme","red","A400","default","ReactDOM","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.a23d800c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const loginTheme = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(img/chess.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(2,0,2),\n    },\n}));","import React, { useState } from 'react';\nimport { loginTheme } from './loginTheme'\nimport { Link, Redirect } from 'react-router-dom'\nimport { History, LocationState } from \"history\";\nimport UserType from './UserType'\nimport { Typography, Paper, Grid, TextField, CssBaseline, Button, Avatar } from '@material-ui/core';\nimport { useForm } from \"./useForm\";\nimport APILogin from '../../api/APILogin'\n\ninterface Props { \n    onLoginRedirect: string,\n    history: History<LocationState>\n}\n\nconst Login: React.FC<Props> = ({\n    onLoginRedirect,\n    history\n }) => {\n\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    // getting the event handlers from our custom hook\n    const { onChange, onSubmit, values } = useForm(\n        loginUserCallback,\n        initialState\n    );\n\n    function loginUserCallback() {\n        APILogin(values)\n            .then((data) => {\n                if (data.status === 401) {\n                    const message: string = data.data\n                    alert(message)\n                } else {\n                    const userInfo: UserType = data.data\n                    if (userInfo) {\n                        if (userInfo.user.permissionLevel === \"admin\") {\n                            localStorage.setItem(\"token\", userInfo.token)\n                            localStorage.setItem(\"refreshToken\", userInfo.refreshToken)\n                            history.push(onLoginRedirect)\n                        } else {\n                            alert('you are not admin')\n                        }\n                    }\n                }\n            })\n    }\n\n    const classes = loginTheme();\n    const isLogin = localStorage.getItem('token')\n    \n    if (!isLogin) {\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n    \n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                </Typography>\n    \n                        {/* form */}\n                        <form className={classes.form} noValidate onSubmit={onSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Username\"\n                                name=\"email\"\n                                onChange={onChange}\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                onChange={onChange}\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                  </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    } else return <><Redirect to=\"/dashboard\"/></>\n}\n\nexport default Login\n","import { useState } from \"react\";\n\n// useForm functional componen\nexport const useForm = (callback: any, initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };\n\n    // onSubmit\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await callback(); // triggering the callback\n    };\n\n    // return values\n    return {\n        onChange,\n        onSubmit,\n        values,\n    };\n\n}\n\n    ","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APILogin(userInfo) {\n    return axios.post(constants.baseAddress+'login', userInfo)\n  .then(response => response)\n  .catch(function (error) {\n    if (error.response) {\n      return error.response;\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    }\n  })\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const HeadingTheme = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        borderRadius: 40,\n        padding: 30,\n        lineHeight: 1.5,\n        boxShadow: `0px 2px 8px rgba(0,0,0,0.05)`,\n        transition: 'transform 280ms ease-in-out, box-shadow 200ms ease-in-out',\n        '&:hover': {\n            transform: 'translateY(-10px)',\n            boxShadow: '0px 4px 16px rgba(0,0,0,0.1)'\n        },\n    },\n    keys: {\n        marginTop: 20,\n        display: 'flex'\n    },\n    keyIcon: {\n        marginLeft: 20,\n        fontSize: 34,\n        transform: 'rotate(-90deg)',\n        color: 'rgb(37, 150, 190)',\n        \n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '7px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 400\n    },\n    pos: {\n        marginBottom: 12,\n    }\n}));","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetKeys(token) {\n  return axios.get(constants.baseAddress +'key', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React, { useEffect } from 'react';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\nimport { HeadingTheme } from './HeadingTheme';\nimport APIGetKeys from '../../../api/APIGetKeys';\n\nexport default function HeadingKeys() {\n\n  const classes = HeadingTheme();\n  const TOKEN = localStorage.getItem('token')\n\n  const [availableKeys, setAvailableKeys] = React.useState(0)\n\n  useEffect(() => {\n    APIGetKeys(TOKEN)\n        .then((data) => {\n          setAvailableKeys(data.length)\n        })\n        .catch((error) => console.log(error))\n})\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} gutterBottom>\n          Available Keys\n        </Typography>\n        <Typography className={classes.keys} variant=\"h4\" component=\"h5\">\n          {availableKeys}\n          <VpnKeyIcon className={classes.keyIcon}/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button href=\"/dashboard/keys\" size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetTargets(token) {\n  return axios.get(constants.baseAddress +'target', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React, { useEffect } from 'react';\nimport { Storage } from '@material-ui/icons';\nimport { Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\nimport { HeadingTheme } from './HeadingTheme';\nimport APIGetTargets from '../../../api/APIGetTargets';\n\nexport default function HeadingKeys() {\n\n  const classes = HeadingTheme();\n  const TOKEN = localStorage.getItem('token')\n\n  const [availableKeys, setAvailableKeys] = React.useState(0)\n\n  useEffect(() => {\n    APIGetTargets(TOKEN)\n        .then((data) => setAvailableKeys(data.length))\n        .catch((error) => console.log(error))\n}, [])\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} gutterBottom>\n          Available Targets\n        </Typography>\n        <Typography className={classes.keys} variant=\"h4\" component=\"h5\">\n          {availableKeys}\n          <Storage className={classes.keyIcon}/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button href=\"/dashboard/active-keys\" size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 220;\n\nexport const appBarTheme = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      height: 55,\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      height: 55,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    \n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    \n    title: {\n      fontSize: 14,\n      fontWeight: 500,\n      marginLeft: 20\n    },\n    items: {\n      fontSize: 15,\n      marginTop: '0.2rem'\n    },\n    selected: {\n      backgroundColor: \"rgb(197, 250, 211) !important\",\n      color: \"green\",\n      fontWeight: 60\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    \n  }));","import VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport APICreateKey from '../../../api/APICreateKey'\nimport 'reactjs-popup/dist/index.css';\nimport swal from 'sweetalert';\n\ninterface Props { }\n\nfunction CreateKey(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const owner = event.target['owner'].value\n    const expire = event.target['expire'].value\n    APICreateKey(name, owner, expire)\n      .then((results: any) => {\n        console.log(results)\n        if (results.status === 400) {\n          alert(results.data)\n        }\n        else if (results.status === 403) alert(results.data)\n        else {\n          const KEY = results.data.key\n          swal({\n            text: 'Key created',\n            // @ts-ignore\n            button: {\n              text: \"Copy key\",\n            },\n            content: {\n              element: \"input\",\n              attributes: {\n                placeholder: \"key\",\n                type: \"input\",\n                value: KEY,\n              },\n\n            },\n          })\n            .then(() => {\n              var dummy = document.createElement(\"textarea\");\n              // to avoid breaking orgain page when copying more words\n              // cant copy when adding below this code\n              // dummy.style.display = 'none'\n              document.body.appendChild(dummy);\n              //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\n              dummy.value = KEY\n              dummy.select();\n              document.execCommand(\"copy\");\n              document.body.removeChild(dummy);\n              swal(\"Key copied!\", {\n                icon: \"success\",\n              });\n            });\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup closeOnDocumentClick={false} trigger={\n        <Tooltip title=\"Create a new key\">\n          <IconButton>\n            <VpnKeyIcon />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new key </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div>\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\"  placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Owner</label>\n                  <input type=\"text\" name=\"owner\" placeholder='' />\n                </div>\n                <div >\n                  Expires At\n                  <input name=\"expire\" type=\"datetime-local\" defaultValue=\"2022-01-01T00:00\" />\n                <Button style={{ marginTop: '20px' }} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </div>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateKey\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateKey(name, owner, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"owner\": owner,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import './style.css'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport { Storage } from '@material-ui/icons';\nimport APICreateTarget from '../../../api/APICreateTarget'\nimport 'reactjs-popup/dist/index.css';\n\ninterface Props { }\n\nfunction CreateTarget(props: Props) {\n  const { } = props\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const name = event.target['name'].value\n    const key = event.target['key'].value\n    const url =  \"http://nmas.nome.fi:\" +event.target['url'].value\n    const details = event.target['details'].value\n    APICreateTarget(key, name, url, details)\n      .then((results: any) => {\n        console.log(results)\n        if (results.status === 400) alert(results.data)\n        else if (results.status === 403) alert(results.data)\n        else {\n          alert('created success !')\n          window.location.reload(false)\n        }\n      })\n  }\n\n  return (\n    <>\n      <Popup trigger={\n        <Tooltip title=\"Create a new target\">\n          <IconButton>\n            <Storage />\n          </IconButton>\n        </Tooltip>} modal>\n        {(close: any) => (\n          <div className=\"modal\">\n            <button className=\"close\" onClick={close}>\n              &times;\n            </button>\n            <div className=\"header\"> Add a new target </div>\n            <div className=\"content\">\n              {/* form */}\n              <form onSubmit={onSubmit}>\n                <div>\n                  <label htmlFor=\"inputAddress\">Name</label>\n                  <input type=\"text\" name=\"name\" placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Key</label>\n                  <input type=\"text\" name=\"key\" placeholder='' />\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Port</label>\n                  <input type=\"text\" name=\"url\" placeholder='50000'/>\n                </div>\n                <div>\n                  <label htmlFor=\"inputAddress2\">Details</label>\n                  <input type=\"text\" name=\"details\" placeholder='' />\n                </div>\n                <Button style = {{marginTop: '20px'}} type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n              </form>\n            </div>\n            <button className=\"close\" onClick={() => { close() }}>&times;</button>\n          </div>\n        )}\n      </Popup>\n    </>\n  )\n}\n\nexport default CreateTarget\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateTarget(key, name, url, details) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n            \"key\": key,\n            \"name\": name,\n            \"url\": url,\n            \"details\": details\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React, { useEffect, useState } from 'react'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\ninterface Props {\n    usersInfo: any\n }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, filter: true, flex: 1 },\n    { headerName: 'Email', field: 'email', sortable: true, filter: true, editable: false, flex: 1 }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n    colSpan: colSpan,\n    filter: true\n}\n\nconst UserGrid: React.FC<Props> = ({ usersInfo }) => {\n\n    return (\n        <div className=\"ag-theme-alpine\"\n            style={{ width: '90%', marginLeft: '1rem'}}\n        >\n            <h4>Result</h4>\n  \n            <AgGridReact\n                columnDefs={initColumnDefs}\n                rowData={usersInfo}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                domLayout=\"autoHeight\"\n                suppressCopyRowsToClipboard={true}\n            />\n\n        </div>\n    );\n}\n\nexport default UserGrid;\n","import './style.css'\nimport React from 'react'\nimport Popup from 'reactjs-popup';\nimport { Tooltip, IconButton, Button } from \"@material-ui/core\";\nimport APIGetUserByKey from '../../../api/APIGetUserByKey'\nimport SearchIcon from '@material-ui/icons/Search';\nimport 'reactjs-popup/dist/index.css';\nimport UserGrid from './UserGrid'\ninterface Props { }\n\ninterface result {\n    name: string,\n    email: string\n}\n\nfunction SearchUserKey(props: Props) {\n\n    const [usersInfo, setUsersInfo] = React.useState([]);\n    const { } = props\n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        const key = event.target['key'].value\n        APIGetUserByKey(key)\n            .then((results: any) => {\n                console.log(results.data[0].users)\n                if (results.data[0] === undefined) alert('Invalid key')\n                else setUsersInfo(results.data[0].users)\n            })\n    }\n\n    return (\n        <>\n            <Popup trigger={\n                <Tooltip title=\"Search users by key\">\n                    <IconButton>\n                        <SearchIcon />\n                    </IconButton>\n                </Tooltip>} modal>\n                {(close: any) => (\n                    <div className=\"modal\">\n                        <button className=\"close\" onClick={close}>\n                            &times;\n                        </button>\n                        <div className=\"header\"> Search users by key </div>\n                        <div>\n                            {/* form */}\n                            <form onSubmit={onSubmit}>\n                                <br />\n                                Key: <input type=\"text\" name=\"key\" className=\"form-control key-input\" id=\"inputAddress\" placeholder='' /> \t&nbsp;\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\"><SearchIcon /></Button>\n\n                                <UserGrid usersInfo={usersInfo} />\n                                <br />\n                            </form>\n                        </div>\n                        <button className=\"close\" onClick={() => { close() }}>&times;</button>\n                    </div>\n                )}\n            </Popup>\n        </>\n    )\n}\n\nexport default SearchUserKey;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIGetUserByKey(key) {\n\n    const token = localStorage.getItem('token')\n\n    var requiredInfo = {\n        \"includeUsers\": true,\n        \"key\": key\n    }\n\n    var config = {\n        method: 'get',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        params : requiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n            }\n        })\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const ActionTheme = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        borderRadius: 40,\n        padding: 30,\n        lineHeight: 1.5,\n        boxShadow: `0px 2px 8px rgba(0,0,0,0.05)`,\n    }\n    \n}));","import React from 'react'\nimport CreateKey from './CreateKey'\nimport CreateTarget from './CreateTarget'\nimport SearchUserKey from './SearchUserKey'\nimport { Card,CardContent } from '@material-ui/core';\nimport { ActionTheme } from './ActionTheme'\ninterface Props { }\n\nconst Index: React.FC<Props> = ({ }) => {\n\n    const classes = ActionTheme();\n\n    return (\n        <>\n            <h1>Tools</h1>\n            \n            <Card className={classes.root}>\n                <CardContent>\n                    <CreateKey />\n                    <CreateTarget />\n                    <SearchUserKey/>\n                </CardContent>\n            </Card>\n        </>\n    )\n}\n\nexport default Index;\n","import React from 'react'\nimport HeadingKeys from './progress/HeadingKeys'\nimport HeadingActiveKeys from './progress/HeadingActiveKeys'\nimport HeadingOwner from './progress/HeadingOwner'\nimport HeadingExample from './progress/HeadingExample'\nimport { appBarTheme } from './appBarTheme'\nimport Actions from './actions'\n\nimport './styles.css'\nimport { useEffect } from 'react'\n\ninterface Props {\n}\n\nconst AppContent: React.FC<Props> = ({\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n\n        <div className=\"container\">\n            <div className={classes.drawerHeader} />\n            <h1>Dashboard</h1>\n\n            <div className=\"progress\">\n                <div className=\"keys\"><HeadingKeys /></div>\n                <div className=\"active-keys\"><HeadingActiveKeys /></div>\n            </div>\n            <div className=\"grid\">\n                <Actions />\n            </div>\n\n        </div>\n    );\n}\n\nexport default AppContent\n","import './style.css'\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/datepicker';\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\" style=\"color:green\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\" style=\"color:blue\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        // if (action === \"delete\") {\n        //     console.log(params.data)\n        //     const { name } = params.data\n        //     swal({\n        //         title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n        //         text: \"Once deleted, you will not be able to recover this key!\",\n        //         icon: \"warning\",\n        //         // @ts-ignore\n        //         buttons: true,\n        //         dangerMode: true,\n        //     })\n        //         .then(willDelete => {\n        //             if (willDelete) {\n        //                 swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n        //                 params.api.applyTransaction({\n        //                     remove: [params.node.data]\n        //                 });\n        //             }\n        //         });\n        // }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n  Datepicker.prototype.init = function(params: any) {\n    this.eInput = document.createElement(\"input\");\n    this.eInput.value = params.value;\n    $(this.eInput).datepicker({ dateFormat: \"yy-mm-ddT00:00:00.000Z\" });\n  };\n  Datepicker.prototype.getGui = function() {\n    return this.eInput;\n  };\n  Datepicker.prototype.afterGuiAttached = function() {\n    this.eInput.focus();\n    this.eInput.select();\n  };\n  Datepicker.prototype.getValue = function() {\n    return this.eInput.value;\n  };\n  Datepicker.prototype.destroy = function() {};\n  Datepicker.prototype.isPopup = function() {\n    return false;\n  };\n  return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n    getDatePicker\n}\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    getDatePicker\n} from './ActionGrid'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetKeys from '../../../api/APIGetKeys'\nimport APIUpdateKey from '../../../api/APIUpdateKey'\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'Key', field: 'key', sortable: true, filter: true, editable: false, flex: 2 },\n    { headerName: 'Name', field: 'name', sortable: true, filter: true, flex: 1 },\n    { headerName: 'Owner', field: 'owner', sortable: true, filter: true, editable: false, flex: 1 },\n    {\n        headerName: 'Expires at', field: 'expiresAt', sortable: true, filter: true, flex: 1.5, maxWidth: 400, cellEditor: \"datePicker\", \n        valueFormatter: (params: any) => {\n\n            var today = new Date().toISOString().substring(0, 10)\n            var localDateTime = new Date(params.value).toISOString().substring(0, 10);\n            \n            var diff =  Math.floor(( Date.parse(localDateTime) - Date.parse(today) ) / 86400000); \n            \n            return localDateTime + ' (' + diff + ' days left)'\n        }\n    },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    width: 220,\n    colSpan: colSpan,\n    filter: true\n}\n\nconst onRowValueChanged = (event: any) => {\n    console.log(event.data)\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                const { id, name, expiresAt } = event.data\n                APIUpdateKey(id, name, expiresAt)\n                    .then((res) => console.log(res))\n                    .catch((err) => console.log(err))\n                swal(\"Updated!\", \"Your key has been updated!\", \"success\");\n            }\n        });\n}\n\nconst KeyGrid: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n    let TOKEN = localStorage.getItem('token')\n\n    const getTokenEveryTwoMinus = () => {\n        var newToken = localStorage.getItem('token')\n        return newToken;\n    }\n\n    useEffect(() => {\n        APIGetKeys(TOKEN)\n            .then((data) => setRowData(data))\n            .catch((error) => console.log(error))\n    }, [])\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getTokenEveryTwoMinus()\n            console.log('new token applied 2 mins ago !')\n        }, 120000);\n        return () => clearInterval(interval);\n    })\n\n\n    return (\n        <div className=\"ag-theme-alpine container\"\n            style={{\n                width: '80%',\n                height: '500px',\n                marginTop: '100px'\n            }}\n        >\n            <h1>Available Keys</h1>\n\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                onRowValueChanged={onRowValueChanged}\n                suppressCopyRowsToClipboard={true}\n                domLayout=\"autoHeight\"\n                // stopEditingWhenCellsLoseFocus={true}\n                components = {{ datePicker: getDatePicker() }}\n            />\n\n        </div>\n    );\n}\n\nexport default KeyGrid;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(id, name, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport clsx from 'clsx';\nimport {Button, CssBaseline, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface Props {\n    open: boolean,\n    handleDrawerOpen: () => void;\n    onLogOut : () => void;\n}\n\nconst Navbar: React.FC<Props> = ({\n    open,\n    handleDrawerOpen,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n        <>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n                color=\"default\"\n                style={{background: 'inherit', boxShadow : 'none'}}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                    </Typography>\n                    <Button href=\"/\" onClick={onLogOut} style={{ marginLeft: '80%', fontSize: 16 }} color=\"inherit\">\n                        Log-out</Button>\n            </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n\nexport default Navbar\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { appBarTheme } from '../appBarTheme'\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport { List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { Timeline, VpnKey, Storage, ChevronLeft, ChevronRight } from '@material-ui/icons';\n\nimport './style.css'\nimport { useEffect } from 'react';\n\ninterface Props {\n    open: boolean,\n    handleDrawerClose: () => void;\n}\nconst Sidebar: React.FC<Props> = ({\n    open,\n    handleDrawerClose\n}) => {\n\n    const classes = appBarTheme();\n    const theme = useTheme();\n\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    useEffect(() => {\n        console.log(window.location.pathname)\n        switch (window.location.pathname) {\n            case \"/dashboard\":\n                setSelectedIndex(0);\n                break;\n            case \"/dashboard/keys\":\n                setSelectedIndex(1);\n                break;\n            case \"/dashboard/active-keys\":\n                setSelectedIndex(2);\n                break;\n\n            default:\n                setSelectedIndex(0);\n                break;\n        }\n    }, [selectedIndex])\n\n    return (\n        <>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton color=\"inherit\" onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n                    </IconButton>\n                </div>\n                <Typography className={classes.title} gutterBottom>\n                    GENERAL\n                </Typography>\n                <List component=\"nav\" aria-label=\"main folders\">\n                    <ListItem\n                        button\n                        component={NavLink} to={'/dashboard'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 0}\n                        onClick={(event: any) => handleListItemClick(event, 0)}\n                    >\n                        <ListItemIcon>\n                            <Timeline />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Dashboard\n                        </Typography>} />\n                    </ListItem>\n\n                    <br></br>\n                    <Typography className={classes.title} gutterBottom>\n                        TOOLS\n                    </Typography>\n\n                    <ListItem\n                        button\n                        component={NavLink} to={'/dashboard/keys'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 1}\n                        onClick={(event: any) => handleListItemClick(event, 1)}\n                    >\n                        <ListItemIcon>\n                            <VpnKey />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Keys\n                        </Typography>} />\n                    </ListItem>\n\n                    <ListItem\n                        button\n                        component={NavLink} to={'/dashboard/active-keys'}\n                        classes={{ selected: classes.selected }}\n                        selected={selectedIndex === 2}\n                        onClick={(event: any) => handleListItemClick(event, 2)}\n                    >\n                        <ListItemIcon>\n                            <Storage />\n                        </ListItemIcon>\n                        <ListItemText primary={<Typography className={classes.items} color=\"textSecondary\" gutterBottom>\n                            Active Targets\n                        </Typography>} />\n                    </ListItem>\n                </List>\n            </Drawer>\n        </>\n    );\n}\n\nexport default Sidebar;\n","import React, { useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { appBarTheme } from './appBarTheme'\nimport Navbar from './layout/Navbar'\nimport Sidebar from './layout/Sidebar'\nimport APIRefreshToken from '../../api/APIRefreshToken'\n\ninterface Props {\n    open: boolean;\n    handleDrawerOpen: () => void;\n    handleDrawerClose: () => void;\n    onLogOut: () => void;\n}\n\nconst Appbar: React.FC<Props> = ({\n    open,\n    handleDrawerClose,\n    handleDrawerOpen,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme()\n\n    const TOKEN = localStorage.getItem('token')\n\n    if (TOKEN) {\n        return (\n            <div className={classes.root}>\n\n                <Navbar\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    onLogOut={onLogOut}\n                />\n\n                <Sidebar\n                    open={open}\n                    handleDrawerClose={handleDrawerClose}\n                />\n\n            </div>\n        );\n    } else return (\n        <><Redirect to='/' /></>\n    )\n}\n\nexport default Appbar\n","import swal from 'sweetalert';\nimport APIDeleteTarget from '../../../api/APIDeleteTarget';\n\nconst actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");   \n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n    <i class=\"fa fa-check\" data-action=\"update\" style=\"color:green\"></i>\n    <i class=\"fa fa-times\" data-action=\"cancel\"></i>\n  `;\n    } else {\n        eGui.innerHTML = `\n    <i class=\"fa fa-edit\" data-action=\"edit\" style=\"color:blue\"></i>\n    <i class=\"fa fa-trash\" data-action=\"delete\" style=\"color:red\"></i>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        if (action === \"delete\") {\n            console.log(params.data)\n            const { id, name } = params.data\n            swal({\n                title: \"Are you sure to delete this row?\"+\" Name: \" +name,\n                text: \"Once deleted, you will not be able to recover this key!\",\n                icon: \"warning\",\n                // @ts-ignore\n                buttons: true,\n                dangerMode: true,\n            })\n                .then(willDelete => {\n                    if (willDelete) {\n                        APIDeleteTarget(id)\n                        .then(result => console.log(result))\n                        .catch(error => console.error(error))\n                        swal(\"Deleted!\", \"Your key has been deleted!\", \"success\");\n                        params.api.applyTransaction({\n                            remove: [params.node.data]\n                        });\n                    }\n                });\n        }\n\n        if (action === \"update\") {\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst getDatePicker: any = () => {\n    function Datepicker() {}\n    Datepicker.prototype.init = function (params: any) {\n      this.eInput = document.createElement('input');\n      this.eInput.value = params.value;\n      this.eInput.classList.add('ag-input');\n      this.eInput.style.height = '100%';\n      $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n    };\n    Datepicker.prototype.getGui = function () {\n      return this.eInput;\n    };\n    Datepicker.prototype.afterGuiAttached = function () {\n      this.eInput.focus();\n      this.eInput.select();\n    };\n    Datepicker.prototype.getValue = function () {\n      return this.eInput.value;\n    };\n    Datepicker.prototype.destroy = function () {};\n    Datepicker.prototype.isPopup = function () {\n      return false;\n    };\n    return Datepicker;\n}\n\nconst onClickEdit: any = () => {\n    function CellRenderer() { }\n    CellRenderer.prototype.createGui = function () {\n        var template =\n            // should be a pencil icon \n            '<span><span id=\"theValue\" style=\"padding-left: 4px;\"></span><button style=\"float:right\" id=\"theButton\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>';\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        this.eGui = tempDiv.firstElementChild;\n    };\n    CellRenderer.prototype.init = function (params: any) {\n        this.createGui();\n        this.params = params;\n        var eValue = this.eGui.querySelector(\"#theValue\");\n        eValue.innerHTML = params.value;\n        this.eButton = this.eGui.querySelector(\"#theButton\");\n        this.buttonClickListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener(\"click\", this.buttonClickListener);\n    };\n    CellRenderer.prototype.onButtonClicked = function () {\n        var startEditingParams = {\n            rowIndex: this.params.rowIndex,\n            colKey: this.params.column.getId()\n        };\n        this.params.api.startEditingCell(startEditingParams);\n    };\n    CellRenderer.prototype.getGui = function () {\n        return this.eGui;\n    };\n    CellRenderer.prototype.destroy = function () {\n        this.eButton.removeEventListener(\"click\", this.buttonClickListener);\n    };\n    return CellRenderer;\n}\n\n  \n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit,\n}\n\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIDeleteTarget(id) {\n    const TOKEN = localStorage.getItem('token')\n    return axios.delete(constants.baseAddress + 'target/' + id, {\n            headers: {\n                'Authorization': `token ${TOKEN}`\n            }\n        })\n        .then((res) => res.data)\n        .catch((error) => {\n            console.error(error)\n        })\n}","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n    onClickEdit\n} from './ActionTarget'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetTargets from '../../../api/APIGetTargets'\nimport APIUpdateTarget from '../../../api/APIUpdateTarget'\n\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'Name', field: 'name', sortable: true, filter: true},\n    { headerName: 'Key', field: 'key', editable: false,  sortable: true, filter: true, flex: 1 ,  valueGetter: (params: any) => params.data.key.key },\n    { headerName: 'Details', field: 'details', sortable: true, filter: true, flex: 1 },\n    { headerName: 'URL', field: 'url', sortable: true, filter: true, flex: 1 },\n    {\n        headerName: \"Action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\",\n        width: 80\n    }\n]\n\nvar colSpan = function (params: any) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst defaultColDef = {\n    editable: true,\n    // width: 220,\n    resizable: true,\n    colSpan: colSpan,\n}\n\nconst onRowValueChanged = (event: any) => {\n    swal({\n        title: \"Are you sure to update this row?\",\n        icon: \"warning\",\n        // @ts-ignore\n        buttons: true,\n        dangerMode: true,\n    })\n        .then(willDelete => {\n            if (willDelete) {\n                const { name, details, url, id } = event.data\n                APIUpdateTarget(name, details, url, id)\n                    .then((res) => {\n                        if (res.status === 403) swal(\"Error!\", res.data, \"warning\")\n                        else swal(\"Updated!\", res.data, \"success\")\n                    })\n                    .catch((err) => console.error(err))\n            }\n        });\n}\n\nconst KeyTarget: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n\n\n    let TOKEN = localStorage.getItem('token')\n\n    const getTokenEveryTwoMinus = () => {\n        var newToken = localStorage.getItem('token')\n        return newToken;\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getTokenEveryTwoMinus()\n            console.log('new token applied 2 mins ago !')\n        }, 120000);\n        return () => clearInterval(interval);\n    })\n\n    useEffect(() => {\n        APIGetTargets(TOKEN)\n            .then((data) => {\n                console.log(data)\n                setRowData(data)\n            })\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine container\"\n            style={{\n                width: '80%',\n                height: '500px',\n                marginTop: '100px'\n            }}\n        >\n            <h1>Active Targets</h1>\n\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                clipboardDeliminator={\",\"}\n                onRowValueChanged={onRowValueChanged}\n                suppressCopyRowsToClipboard={true}\n                stopEditingWhenCellsLoseFocus={true}\n                domLayout=\"autoHeight\"\n            />\n\n        </div>\n    );\n}\n\nexport default KeyTarget;\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIUpdateKey(name, details, url, id) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"details\": details,\n        \"url\": url\n    }\n\n    var config = {\n        method: 'patch',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'target/' +id,\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './auth/Login'\nimport Dashboard from './dashboard/Dashboard'\nimport KeyGrid from './dashboard/grid/KeyGrid'\nimport NotFound from './NotFound'\nimport Appbar from './dashboard/Appbar'\nimport { appBarTheme } from './dashboard/appBarTheme'\nimport clsx from 'clsx';\nimport KeyTarget from './dashboard/KeyTargets/KeyTarget'\nimport { useEffect } from 'react'\nimport APIRefreshToken from '../api/APIRefreshToken'\n\ninterface Props {\n}\n\nconst Main: React.FC<Props> = ({ }) => {\n    const classes = appBarTheme();\n\n    const [open, setOpen] = React.useState(true);\n\n    const [_token, _setToken] = React.useState('');\n\n    const handleDrawerOpen = () => setOpen(true);\n\n    const handleDrawerClose = () => setOpen(false);\n\n    const onLogOut = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n    }\n\n    const refreshTokenInEveryThirtySeconds = () => {\n        var rToken = localStorage.getItem('refreshToken');\n        APIRefreshToken(rToken)\n            .then((results) => {\n                if (results === 401 || results === 403) {\n                    alert('Please login!')\n                    onLogOut()\n                    window.location.reload(false)\n                } else {\n                    console.log(results.token)\n                    _setToken(results.token);\n                    localStorage.setItem('token', results.token)\n                }\n            })\n            .catch(error => console.error(error))\n    }\n\n    const isTokenValid = (fn: () => void) => {\n\n    }\n\n    const TOKEN = localStorage.getItem('token')\n\n    useEffect(() => {\n        // called at the first render\n        if (TOKEN) {\n            console.log('FIRST RENDER...GET NET TOKEN...')\n            refreshTokenInEveryThirtySeconds();\n        }\n        // set timer for 30 seconds call....\n        const interval = setInterval(() => {\n            if (TOKEN !== null) {\n                refreshTokenInEveryThirtySeconds()\n                console.log('Applied refreshTokenInEveryThirtySeconds!');\n            }\n        }, 30000);\n        return () => clearInterval(interval);\n    })\n\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/\" render={(routeProps) => <Login {...routeProps} onLoginRedirect=\"/dashboard\" />} />\n                <div>\n                    <Appbar open={open} handleDrawerOpen={handleDrawerOpen} \n                                        handleDrawerClose={handleDrawerClose}\n                                        onLogOut = {onLogOut} />\n                    \n                    <main className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                    })}>\n                        <Route path=\"/dashboard\" exact render={(routeProps) => <Dashboard {...routeProps} />} />\n                        {/* <Route component={NotFound} /> */}\n                        <Route path=\"/dashboard/keys\" render={(routeProps) => <KeyGrid  {...routeProps} />} />\n                        <Route path=\"/dashboard/active-keys\" render={(routeProps) => <KeyTarget  {...routeProps} />} />\n                    </main>\n                    \n                </div>\n            </Switch>\n\n        </>\n    )\n}\n\nexport default Main;\n\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIRefreshToken(rToken) {\n    return axios.post(constants.baseAddress+'/login', {\n        \"token\" : rToken\n    })\n    .then(response => response.data)\n    .catch(error => \n        error.response.status\n    );\n    \n}","import React from 'react'\nimport Main from './components/Main'\nimport { BrowserRouter as Router } from 'react-router-dom';\ninterface Props {\n\n}\n\nconst App : React.FC<Props>= ( {  } ) => {\n  return (\n    <Router>\n        <Main/>\n    </Router>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f9f9f9',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}