{"version":3,"sources":["components/auth/loginTheme.ts","components/auth/Login.tsx","components/auth/useForm.ts","api/APILogin.js","components/dashboard/appBarTheme.ts","components/dashboard/layout/Navbar.tsx","components/dashboard/layout/Sidebar.tsx","components/dashboard/grid/ActionGrid.ts","components/dashboard/grid/KeyGrid.tsx","api/APIGetKeys.js","components/dashboard/actions/CreateKey.tsx","api/APICreateKey.js","components/dashboard/AppContent.tsx","components/dashboard/Appbar.tsx","api/APIRefreshToken.js","components/dashboard/Dashboard.tsx","components/NotFound.tsx","components/Main.tsx","App.tsx","theme.tsx","index.tsx"],"names":["loginTheme","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","onLoginRedirect","history","callback","initialState","useState","values","setValues","onChange","event","target","name","value","onSubmit","a","preventDefault","useForm","userInfo","axios","post","constants","baseAddress","then","response","catch","error","data","status","message","alert","user","permissionLevel","localStorage","setItem","token","refreshToken","push","email","password","classes","getItem","to","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Button","color","drawerWidth","appBarTheme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Navbar","open","handleDrawerOpen","onLogOut","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","href","style","fontSize","Sidebar","handleDrawerClose","useTheme","Drawer","anchor","direction","onCellClicked","params","column","colId","dataset","action","api","startEditingCell","rowIndex","node","colKey","columnApi","getDisplayedCenterColumns","applyTransaction","remove","console","log","stopEditing","onRowEditingStarted","refreshCells","columns","rowNodes","force","onRowEditingStopped","initColumnDefs","headerName","field","sortable","filter","editable","valueFormatter","Date","toLocaleDateString","minWidth","cellRenderer","eGui","document","createElement","isCurrentRowEditing","getEditingCells","some","cell","innerHTML","defaultColDef","onRowValueChanged","expiresAt","swal","title","text","icon","dangerMode","KeyGrid","rowData","setRowData","useEffect","get","headers","res","APIGetKeys","columnDefs","rowSelection","editType","suppressClickEdit","enableRangeSelection","CreateKey","props","owner","expire","keyRequiredInfo","config","method","url","APICreateKey","results","window","location","reload","trigger","Tooltip","modal","close","htmlFor","placeholder","defaultValue","AppContent","Appbar","React","setOpen","removeItem","getNewToken","rToken","APIRefreshToken","interval","setInterval","clearInterval","Dashboard","NotFound","Main","path","exact","render","routeProps","App","createMuiTheme","primary","red","A400","background","default","ReactDOM","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.711d5003.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const loginTheme = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(img/chess.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));","import React, { useState } from 'react';\nimport { loginTheme } from './loginTheme'\nimport { Link, Redirect } from 'react-router-dom'\nimport { History, LocationState } from \"history\";\nimport UserType from './UserType'\nimport { Typography, Paper, Grid, TextField, CssBaseline, Button, Avatar } from '@material-ui/core';\nimport { useForm } from \"./useForm\";\nimport APILogin from '../../api/APILogin'\n\ninterface Props { \n    onLoginRedirect: string,\n    history: History<LocationState>\n}\n\nconst Login: React.FC<Props> = ({\n    onLoginRedirect,\n    history\n }) => {\n\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    // getting the event handlers from our custom hook\n    const { onChange, onSubmit, values } = useForm(\n        loginUserCallback,\n        initialState\n    );\n\n    function loginUserCallback() {\n        APILogin(values)\n            .then((data) => {\n                if (data.status === 401) {\n                    const message: string = data.data\n                    alert(message)\n                } else {\n                    const userInfo: UserType = data.data\n                    if (userInfo) {\n                        if (userInfo.user.permissionLevel === \"admin\") {\n                            localStorage.setItem(\"token\", userInfo.token)\n                            localStorage.setItem(\"refreshToken\", userInfo.refreshToken)\n                            history.push(onLoginRedirect)\n                        } else {\n                            alert('you are not admin')\n                        }\n                    }\n                }\n            })\n    }\n\n    const classes = loginTheme();\n    const isLogin = localStorage.getItem('token')\n    \n    if (!isLogin) {\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n    \n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                </Typography>\n    \n                        {/* form */}\n                        <form className={classes.form} noValidate onSubmit={onSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Username\"\n                                name=\"email\"\n                                onChange={onChange}\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                onChange={onChange}\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                  </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    } else return <><Redirect to=\"/dashboard\"/></>\n}\n\nexport default Login\n","import { useState } from \"react\";\n\n// useForm functional componen\nexport const useForm = (callback: any, initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };\n\n    // onSubmit\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await callback(); // triggering the callback\n    };\n\n    // return values\n    return {\n        onChange,\n        onSubmit,\n        values,\n    };\n\n}\n\n    ","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APILogin(userInfo) {\n    return axios.post(constants.baseAddress+'login', userInfo)\n  .then(response => response)\n  .catch(function (error) {\n    if (error.response) {\n      return error.response;\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    }\n  })\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 180;\n\nexport const appBarTheme = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      height: 55,\n      // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      height: 55,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport clsx from 'clsx';\nimport {Button, CssBaseline, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface Props {\n    open: boolean,\n    handleDrawerOpen: () => void;\n    onLogOut : () => void;\n}\n\nconst Navbar: React.FC<Props> = ({\n    open,\n    handleDrawerOpen,\n    onLogOut\n}) => {\n\n    const classes = appBarTheme();\n\n    return (\n        <>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n                color=\"default\"\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                    </Typography>\n                    <Button href=\"/\" onClick={onLogOut} style={{ marginLeft: '80%', fontSize: 16 }} color=\"inherit\">\n                        Log-out</Button>\n            </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n\nexport default Navbar\n","import React from 'react';\nimport { appBarTheme } from '../appBarTheme'\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\ninterface Props {\n    open: boolean,\n    handleDrawerClose: () => void;\n}\nconst Sidebar: React.FC<Props> = ({ \n    open,\n    handleDrawerClose\n}) => {\n\n    const classes = appBarTheme();\n    const theme = useTheme();\n\n    return (\n        <>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton color=\"inherit\" onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n            </Drawer>\n        </>\n    );\n}\n\nexport default Sidebar;\n","const actionCellRenderer = (params: any) => {\n    let eGui = document.createElement(\"div\");\n\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell: any) => {\n        return cell.rowIndex === params.node.rowIndex;\n    });\n\n    if (isCurrentRowEditing) {\n        eGui.innerHTML = `\n  <button  class=\"action-button update\"  data-action=\"update\"> update  </button>\n  <button  class=\"action-button cancel\"  data-action=\"cancel\" > cancel </button>\n  `;\n    } else {\n        eGui.innerHTML = `\n  <button class=\"action-button edit\"  data-action=\"edit\" > edit  </button>\n  <button class=\"action-button delete\" data-action=\"delete\" > delete </button>\n  `;\n    }\n\n    return eGui;\n}\n\nconst onCellClicked = (params: any) => {\n    // Handle click event for action cells\n    if (params.column.colId === \"action\" && params.event.target.dataset.action) {\n        let action = params.event.target.dataset.action;\n\n        if (action === \"edit\") {\n            \n            params.api.startEditingCell({\n                rowIndex: params.node.rowIndex,\n                // gets the first columnKey\n                colKey: params.columnApi.getDisplayedCenterColumns()[0].colId\n            });\n        }\n\n        if (action === \"delete\") {\n            params.api.applyTransaction({\n                remove: [params.node.data]\n            });\n        }\n\n        if (action === \"update\") {\n            console.log('update click')\n            params.api.stopEditing(false);\n        }\n\n        if (action === \"cancel\") {\n            params.api.stopEditing(true);\n        }\n    }\n}\n\nconst onRowEditingStarted = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\nconst onRowEditingStopped = (params: any) => {\n    params.api.refreshCells({\n        columns: [\"action\"],\n        rowNodes: [params.node],\n        force: true\n    });\n}\n\n// const getDatePicker = () => {\n//     function Datepicker() { }\n//     Datepicker.prototype.init = function (params: any) {\n//         this.eInput = document.createElement('input');\n//         this.eInput.value = params.value;\n//         this.eInput.classList.add('ag-input');\n//         this.eInput.style.height = '100%';\n//         $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n//     };\n//     Datepicker.prototype.getGui = function () {\n//         return this.eInput;\n//     };\n//     Datepicker.prototype.afterGuiAttached = function () {\n//         this.eInput.focus();\n//         this.eInput.select();\n//     };\n//     Datepicker.prototype.getValue = function () {\n//         return this.eInput.value;\n//     };\n//     Datepicker.prototype.destroy = function () { };\n//     Datepicker.prototype.isPopup = function () {\n//         return false;\n//     };\n//     return Datepicker;\n// }\n\nexport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped,\n}\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    actionCellRenderer,\n    onCellClicked,\n    onRowEditingStarted,\n    onRowEditingStopped\n} from './ActionGrid'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport swal from 'sweetalert';\n\nimport APIGetKeys from '../../../api/APIGetKeys'\n\ninterface Props { }\n\nconst initColumnDefs = [\n    { headerName: 'ID', field: 'id', sortable: true, filter: true, editable: false },\n    { headerName: 'Key', field: 'key', sortable: true, filter: true, editable: false },\n    { headerName: 'Name', field: 'name', sortable: true, filter: true },\n    { headerName: 'Owner', field: 'owner', sortable: true, filter: true },\n    {\n        headerName: 'Expires at', field: 'expiresAt', sortable: true, filter: true, valueFormatter: (params: any) => {\n            var localDateTime = new Date(params.value).toLocaleDateString();\n            return localDateTime;\n        }\n    },\n    {\n        headerName: \"action\",\n        minWidth: 150,\n        cellRenderer: actionCellRenderer,\n        editable: false,\n        colId: \"action\"\n    }\n]\n\nconst defaultColDef = {\n    editable: true\n}\n\nconst onRowValueChanged = (event: any) => {\n    var expiredAt = new Date(event.data.expiresAt).toLocaleDateString();\n    \n    swal({\n        title: \"Are you sure?\",\n        text: \"On my way creating....\",\n        icon: \"warning\",\n        dangerMode: true,\n    })\n        // .then(willDelete => {\n        //     if (willDelete) {\n        //         swal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\n        //     }\n        // });\n\n}\n\nconst initRowData = null;\n\nconst KeyGrid: React.FC<Props> = ({ }) => {\n\n    const [rowData, setRowData] = useState()\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        APIGetKeys(token)\n            .then((data) => setRowData(data))\n            .catch((error) => console.log(error))\n    }, [])\n\n    return (\n        <div className=\"ag-theme-alpine tcl-mask\"\n            style={{\n                width: '90%',\n                height: 300\n            }}\n        >\n            <AgGridReact\n                onRowEditingStopped={onRowEditingStopped}\n                onRowEditingStarted={onRowEditingStarted}\n                onCellClicked={onCellClicked}\n                columnDefs={initColumnDefs}\n                rowData={rowData}\n                rowSelection=\"multiple\"\n                editType=\"fullRow\"\n                defaultColDef={defaultColDef}\n                suppressClickEdit={true}\n                enableRangeSelection={true}\n                onRowValueChanged={onRowValueChanged}\n            />\n\n        </div>\n    );\n}\n\nexport default KeyGrid;\n","import constants from '../constant.json'\nimport axios from 'axios'\n\nexport default function APIGetKeys(token) {\n  return axios.get(constants.baseAddress +'key', {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  })\n  .then((res) => res.data)\n  .catch((error) => {\n    console.error(error)\n  })\n}","import React from 'react'\nimport Popup from 'reactjs-popup';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Add from '@material-ui/icons/Add';\nimport APICreateKey from '../../../api/APICreateKey'\n\ninterface Props {}\n\nfunction CreateKey(props: Props) {\n    const {} = props\n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        const name = event.target['name'].value\n        const owner = event.target['owner'].value\n        const expire = event.target['expire'].value\n        console.log(expire)\n        APICreateKey(name, owner, expire)\n            .then((results: any) => {\n                if(results.status === 400) alert(results.data)\n                else {\n                    alert('created success')\n                    window.location.reload(false)\n                }\n            })\n    }\n\n    return (\n        <>\n            <Popup trigger={\n             <Tooltip title=\"Create a new key\">\n             <IconButton>\n               <Add  />\n             </IconButton>\n           </Tooltip>} modal>\n          {(close: any) => (\n              <div >\n                {/* form */}\n                <form onSubmit={ onSubmit}>\n                  <div className=\"form-row\">\n                    \n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputAddress\">Name</label>\n                    <input type=\"text\" name=\"name\" className=\"form-control\" id=\"inputAddress\" placeholder='' />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputAddress2\">Owner</label>\n                    <input type=\"text\" name=\"owner\" className=\"form-control\" id=\"inputAddress2\" placeholder='' />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputAddress2\">Expires At</label>\n                    <input id=\"party\" name=\"expire\" type=\"datetime-local\" defaultValue=\"2022-01-01T00:00\"/>\n                  </div>\n\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n\n                <button className=\"close\" onClick={() => {close()}}>&times;</button>\n              </div>\n          )}\n          </Popup>\n        </>\n    )\n}\n\nexport default CreateKey\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APICreateKey(name, owner, expire) {\n\n    const token = localStorage.getItem('token')\n\n    var keyRequiredInfo = {\n        \"name\": name,\n        \"owner\": owner,\n        \"expiresAt\": expire\n    }\n\n    var config = {\n        method: 'post',\n        headers: {\n            'Authorization': `token ${token}`\n        },\n        url: constants.baseAddress + 'key',\n        data: keyRequiredInfo\n    };\n\n    return axios(config)\n        .then(response => response)\n        .catch(function (error) {\n            if (error.response) {\n                return error.response;\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            }\n        })\n}\n","import React, { useEffect, useState } from 'react'\nimport KeyGrid from './grid/KeyGrid'\nimport CreateKey from './actions/CreateKey'\n\ninterface Props { }\n\nconst AppContent: React.FC<Props> = ({ }) => {\n\n    \n\n    return (\n        <>\n            <CreateKey/>\n            \n            <KeyGrid/>\n        </>\n    );\n}\n\nexport default AppContent\n","import React, { useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { appBarTheme } from './appBarTheme'\nimport clsx from 'clsx';\nimport Navbar from './layout/Navbar'\nimport Sidebar from './layout/Sidebar'\nimport AppContent from './AppContent'\nimport APIRefreshToken from '../../api/APIRefreshToken'\n\ninterface Props {\n}\n\nconst Appbar: React.FC<Props> = ({\n}) => {\n\n    const classes = appBarTheme();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => setOpen(true);\n\n    const handleDrawerClose = () => setOpen(false);\n\n    const onLogOut = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n    }\n    const getNewToken = () => {\n        var rToken = localStorage.getItem('refreshToken');\n        APIRefreshToken(rToken)\n            .then((results) => {\n                if (results === 401 || results === 403) {\n                    alert('Please login!')\n                    onLogOut()\n                    window.location.reload(false)\n                } else {\n                    localStorage.setItem('token', results.token)\n                }\n            })\n            .catch(error => console.error(error))\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            var token = localStorage.getItem('token');\n                if(token !== null) {\n                    getNewToken()\n                    console.log('This will run every 30 seconds!');\n                }\n            }, 30000);\n            return () => clearInterval(interval);\n    })\n\n    const TOKEN = localStorage.getItem('token')\n\n    if (TOKEN) {\n        return (\n            <div className={classes.root}>\n\n                <Navbar\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    onLogOut={onLogOut}\n                />\n\n                <Sidebar\n                    open={open}\n                    handleDrawerClose={handleDrawerClose}\n                />\n\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n\n                    {/* MAIN CONTENT */}\n                    <AppContent />\n\n                </main>\n            </div>\n        );\n    } else return (\n        <><Redirect to='/' /></>\n    )\n}\n\nexport default Appbar\n","import constants from '../constant.json'\nimport axios from 'axios'\nexport default function APIRefreshToken(rToken) {\n    return axios.post(constants.baseAddress+'/login', {\n        \"token\" : rToken\n    })\n    .then(response => response.data)\n    .catch(error => \n        error.response.status\n    );\n    \n}","import { useEffect } from 'react';\nimport AppBar from './Appbar'\n\ninterface Props {\n\n}\n\nconst Dashboard: React.FC<Props> = () => {\n\n    \n\n    useEffect(() => {\n\n    })\n\n    return (\n        <>\n            <AppBar/>\n        </>\n    )\n}\n\nexport default Dashboard;","import { Link } from 'react-router-dom';\n\nconst NotFound: React.FC<void> = () => {\n    return (\n        <div>\n            <h1>404</h1>\n            <h2>Error: 404 page not found</h2>\n            <p>Sorry, the page you're looking for cannot be accessed</p>\n            <Link to=\"/\">\n                Click here to go back to home\n            </Link>\n        </div >\n    );\n}\n\nexport default NotFound;","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from './auth/Login'\nimport Dashboard from './dashboard/Dashboard'\nimport NotFound from './NotFound'\n\ninterface Props {\n}\n\nconst Main: React.FC<Props> = ( { } ) => {\n    return (\n        <>  \n            <Switch>\n                <Route path=\"/\" exact render={(routeProps) => <Login {...routeProps} onLoginRedirect=\"/dashboard\" />}/>\n                <Route path=\"/dashboard\" exact render={(routeProps) => <Dashboard {...routeProps} />}/>\n                <Route component={NotFound} />\n            </Switch>\n        </>\n    )\n}\n\nexport default Main;\n\n","import React from 'react'\nimport Main from './components/Main'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\ninterface Props {\n\n}\n\nconst App : React.FC<Props>= ( {  } ) => {\n  return (\n    <Router>\n        <Main/>\n    </Router>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}